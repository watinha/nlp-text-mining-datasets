,title-abstract,title,label
0,"A note on pattern-recognition techniques and game-playing programs
A problem encountered in the design of game-playing programs the evaluation
of board positions is formally identical to a typical pattern-recognition
problem. Certain techniques, which have been found helpful in the
pattern-recognition case, may therefore also be applied to game-playing
programs. A brief review of these techniques, based on multivariate
analysis, is given.",A note on pattern-recognition techniques and game-playing programs,0
1,"Gambit: A Prototyping Approach to Video Game Design
Video game designers don't have to be assembly language programmers.
Their creative talents can be expressed in a prototyping language.",Gambit: A Prototyping Approach to Video Game Design,1
2,"Amaze: A Multiplayer Computer Game
Amaze relies solely on the V kernel for point-to-point communication.
The game's techniques could work in a general class of distributed
applications.",Amaze: A Multiplayer Computer Game,0
3,"Serious Work: Programming for Games
no abstract: Serious Work: Programming for Games",Serious Work: Programming for Games,0
4,"Computer games: introduction
""Why an issue on computer games?"" you may be asking. Several reasons
come to mind. First, computer science owes a lot to computer games.
Obviously, the computer game industry has made significant advances
in computer graphics, but computer games have also made contributions
in other areas such as human computer interaction and computer architecture.
In the future, I believe the contributions from computer games to
computer science, and vice versa, will be even more numerous. Computer
game companies and software and hardware companies are forming alliances
in order to leverage off each other's research. Entertainment companies
and telecommunication companies are also joining these alliances.
Whatever the outcome of these partnerships, we know that computer
games will change dramatically in the future...",Computer games: introduction,0
5,"Digital storytelling and computer game design
This workshop uses a combination of short lecture and hands on practice
to introduce digital storytelling and computer game design and the
multitude of skills needed to successfully design digital stories
and computer games. Working examples are taken from two current projects
at Indiana University: Lost Highways and Rock-Paper-Scissors in Lizard
Land.",Digital storytelling and computer game design,0
6,"Designing a PC Game Engine
Computer game engine requirements change in response to evolving game
platforms and demands for reduced development costs. We propose a
3D game engine, marketed as NetImmerse, for varying performance levels.",Designing a PC Game Engine,1
7,"Design and simulation of interactive 3D computer games
Design and development of attractive and competitive computer games
is no longer a one-man task, but a complex multistage process with
many participants. Discovering new game ideas and their further development,
game world and characters design and modeling, game evaluation and
testing all these are conducted by specialists teamed to work together.
In this paper we discuss tools and facilities supporting the collaborative
game design and development process through rapid prototyping and
simulation of 3D game worlds, characters, behaviors and other game
functionality. Single player and multi-player games are addressed
in the context of different hardware platforms and software approaches.
We report our experience in building a Game Design and Simulation
testbed environment (GDS) and its usage in location-based entertainment
projects. Work on GDS has been carried out in the scope of the VirtuaFly
project and during the development of the physical motion based commercial
game VirtuaFly2.",Design and simulation of interactive 3D computer games,0
8,"Generalised flowcharts and games
We introduce a generalization of the classical notion of flowchart
for languages with higher order and object-oriented features. These
general flowcharts are obtained by an abstraction of the game semantics
for Idealized Algol and as such rely on a solid mathematical basis.
We demonstrate how charts may be used as the basis for data flow
analysis.",Generalised flowcharts and games,0
9,"Latency and User Behaviour on a Multiplayer Game Server
Multiplayer online games represent one of the most popular forms of
networked group communication on the Internet today. We have been
running a server for a first-person shooter game, Half-Life. In this
paper we analyse some of the delay characteristics of different players
on the server and present some interim results. We find that whilst
network delay has some effect on players behaviour, this is outweighed
by application-level or exogenous effects. Players seem to be remarkably
tolerant of network conditions, and absolute delay bounds appear
to be less important than the relative delay between players.",Latency and User Behaviour on a Multiplayer Game Server,0
10,"Evolving Games and Essential Nets for Affine Polymorphism
This paper presents a game model of Second-order Intuitionistic Multiplicative
Affine Logic (IMAL2). We extend Lamarche s essential nets to the
second-order affine setting and use them to show that the model is
fully and faithfully complete.",Evolving Games and Essential Nets for Affine Polymorphism,0
11,"Wireless Games - Review and Experiment
This paper is an introduction to the domain of wireless games. It
presents a brief history of mobile gaming, a number of important
technologies and introduces classification and evaluation concepts
and criteria. A multi-player, multi-platform card game developed
in the University of Oulu, is used to present authors own experiences
in this field.",Wireless Games - Review and Experiment,1
12,"Architecture for a massively multiplayer online role playing game
engine
Faster networks, faster processors and 3D accelerator cards have contributed
to the push for a new genre of online games, the Massively Multiplayer
Online Role Playing Game, MMORPG. This paper presents a high-level
software architecture for building a MMORPG engine. Six goals for
the architecture are set, the architecture is presented and then
examined to determine how well the goals have been met. The architecture
blends in a unique way several classical software architecture patterns,
using the strength of each to achieve the goals for the system.","Architecture for a massively multiplayer online role playing game
engine",0
13,"Games engines in scientific research
Six-figure workstations and custom software are not producing the
best graphics or virtual reality simulations anymore. Today, the
only way to have the fastest, most realistic simulations and sophisticated
graphics is to trade down from the expensive gear to standard PCs
running game software. Virtual reality (VR), augmented reality (AR),
and high-fidelity physical simulation have long posed too high a
barrier to entry for any but the most generously funded researchers.
Significant advances in computer graphics in these areas have traditionally
depended on expensive, specialized graphics hardware running on scientific
workstations. Highfidelity simulation/graphics software has also
remained an expensive niche market largely the province of the military
and high-end VR labs seeking to drive costly peripherals such as
Caves, datagloves, and head-mounted displays (HMDs). In the past
two years, however, the situation has changed remarkably. Now the
mass market for

computer games, grown even larger than the movie industry, has expropriated
the best in computer hardware and software for itself. The most sophisticated
rendering pipelines are now found not on specialized scientific machines
but on PC video cards costing less than $500. The most sophisticated,
responsive interactive simulations are now found in the engines built
to power games. Despite the stigma of violence and gore associated
...",Games engines in scientific research,0
14,"Design patterns for games
Designing a two-person game involves identifying the game model to
compute the best moves, the user interface (the view) to play the
game, and the controller to

coordinate the model and the view. A crucial task is to represent
the algorithms used in their highest abstract forms. This can prove
to be a difficult and subtle endeavor.

It is made easier however by the use of good objectoriented (OO) design
principles to help maintain a high level abstract viewpoint during
the design process. The state pattern is used to represent the game
board and is coupled with the visitor pattern to provide state-dependent,
variant behaviors. The min -max algorithm and its variants

are implemented as the strategy pattern, which allows flexible and
extensible computational capability. Careful analysis is performed
to properly abstract the interactions

between the model and the view. The command design pattern is used
to provide callback services between the model and the view. Leading
students through this design process enables them to learn algorithms
and architectures that easily scale to full-sized applications.",Design patterns for games,1
15,"Information Flow in Concurrent Games
We consider games where the players have perfect information about
the games state and history, and we focus on the information exchange
that takes place at each round as the players choose their moves.
The abilityof a player to gather information on the opponents choice
of move in a round determines her ability to counteract the move,
and win the game. When the game is played between teams, rather than
single players, the amount of intra-team communication determines
the ability of the team members to coordinate their moves and win
the game. We consider games with quantitative bounds on inter-team
and intra-team information flow, and we provide algorithms and complexity
bounds for their solution.",Information Flow in Concurrent Games,0
16,"Explaining the enjoyment of playing video games: the role of competition
The tremendous and still growing popularity of computer and video
games has inspired Communication Researchers and Media Psychologists
to investigate the factors of the enjoyment experienced by the players.
Apparently, the games' interactivity allows for a continuous stream
of challenging and competitive situations that have to be resolved
by the players. Competition is therefore regarded a key element of
the explanation of players' entertainment experience. Subsequent
to a theoretical explication, empirical evidence for the role of
competition in the playing process and the impact of competitiveness
for selective exposure to computer games is reported from a field
experiment (N = 349) and an online survey study (N = 795).",Explaining the enjoyment of playing video games: the role of competition,0
17,"Facilitating collaboration through design games
In recent years both companies and research communities call for collaborative
work practices and user-centered approaches in various design fields.
There are several challenges and issues to take into consideration.
For instance there is a need to find ways of collaborating across
various competences, interests, responsibilities and perhaps professional
languages both within one organization, between several organizations
and between the organizations and a group of (potential) users. It
is necessary to find ways to learn about users and the contexts of
use, and to create a common understanding of the development task.
This paper presents a set of four design games, which offers solutions
to the challenges mentioned. The design games have been developed
in the Space Studio during several projects and years. Here experiences
are discussed on the basis of two research projects carried out in
collaboration with industrial partners and potential users, and use
of the games in three educational settings.The overall aim of the
design games is to help facilitate a user-centered design process
for cross-disciplinary design groups early in the design process.
Framing collaborative design activities in a game format, arguably
improves idea generation and communication between stakeholders.
By shifting focus to the game, power relations and other factors
that might hamper idea generation, are downplayed.",Facilitating collaboration through design games,0
18,"AI: the Missing Link in Digital Game Interface Design?
The central problem that this paper addresses is how to manage dynamic
change within game environments in response to variable player requirements
and ability. In particular, we discuss the role of a game AI to enable
game systems to learn about individual user patterns, behaviours,
desires or moods in order to adapt the environment in reaction to
the users interaction with the environment. We discuss the role
that AI may play in the design of the game interface in order to
enhance the dynamic and responsive nature of the game system with
respect to individual users and leading to more rewarding and immersive
game experiences.",AI: the Missing Link in Digital Game Interface Design?,0
19,"The usability of massively multiplayer online roleplaying games:
designing for new users
This study examines the usability challenges faced by new players
of massively multiplayer online role-playing games (MMORPGs), one
of the fastest-growing segments of the video game industry. Played
in completely online worlds, these games allow players to communicate
with one another, form groups and communities, and compete in a variety
of fantasy environments.Nineteen subjects participated in an exploratory
usability study of four games, three MMORPGs and a similar single-player
game used for comparison. Results reveal that many people not usually
considered as potential players of these games may be interested
in them, but a wide variety of usability issues present serious problems
for players inexperienced with the genre. Based on an analysis of
the usability data and player feedback, specific recommendations
are made to improve the experience of these games for new players.
These results further demonstrate the applicability and importance
of usability testing to video games.","The usability of massively multiplayer online roleplaying games:
designing for new users",1
20,"Interaction and Expressivity in Video Games: Harnessing the Rhetoric
of Film
The film-maker uses the camera and editing creatively, not simply
to present the action of the film but also to set up a particular
relation between the action and the viewer. In 3D video games with
action controlled by the player, the pseudo camera is usually less
creatively controlled and has less effect on the playerrsquos appreciation
of and engagement with the game. This paper discusses methods of
controlling games by easy and intuitive interfaces and use of an
automated virtual camera to increase the appeal of games for users.","Interaction and Expressivity in Video Games: Harnessing the Rhetoric
of Film",0
21,"Using heuristics to evaluate the playability of games
Heuristics have become an accepted and widely used adjunct method
of usability evaluation in Internet and software development. This
report introduces Heuristic Evaluation for Playability (HEP), a comprehensive
set of heuristics for playability, based on the literature on productivity
and playtesting heuristics that were specifically tailored to evaluate
video, computer, and board games. These heuristics were tested on
an evolving game design to assess their face validity and evaluation
effectiveness compared to more standard user testing methodologies.
The results suggest that HEP identified qualitative similarities
and differences with user testing and that HEP is best suited for
evaluating general issues in the early development phases with a
prototype or mock-up. Combined with user studies, HEP offers a new
method for the HCI game community that can result in a more usable
and playable game.",Using heuristics to evaluate the playability of games,1
22,"Quantifying game design
There is at present a conspicuous need for formal evaluative methods
which designers of video and computer games can use in order better
to understand the elusive factors which lead to good gameplay mechanics.
This paper presents the results of an empirical study which has been
used to establish a practical quantitative procedure for analysing
and comparing certain gameplay characteristics of rally (driving)
games, and thus of determining objectively characteristics which
are typical of such games at various levels of quality and type.
The information offered can be used by games developers as pointers
to building into their products a superior gameplay which potentially
makes for better reputations and increased sales.",Quantifying game design,0
23,"Design and Implementation of an Online 3D Game Engine
This paper proposes Dream3D, an online 3D game engine. We analyze
requirements to build MMORPGs together with the techniques to satisfy
them. And then, the techniques are classified into four categories:
3D rendering, animation, server, and network techniques. We design
and implement Dream3D to provide all the required functionalities.
Related with the technique classification, Dream3D consists of four
subsystems: rendering engine, animation engine, server engine, and
network engine. For each of the subsystems, we propose an implementation
model to satisfy the functionality requirements.",Design and Implementation of an Online 3D Game Engine,1
24,"ScriptEase: generative design patterns for computer role-playing
games
Recently, some researchers have argued that generative design patterns
(GDPs) can leverage the obvious design re-use that characterizes
traditional design patterns into code re-use. This work provides
additional evidence that GDPs are both useful and productive. Specifically,
the current state-of-the-art in the domain of computer games is to
script individual game objects to provide the desired interactions
for each game adventure. We use BioWare Corp.'s popular Neverwinter
Nights computer role-playing game to show how GDPs can be used to
generate game scripts. This is a particularly good domain for GDPs,
since game designers often have little or no programming skills.
We demonstrate our approach using a new GDP tool called ScriptEase.","ScriptEase: generative design patterns for computer role-playing
games",1
25,"From Gaming Simulation to Case Method Empirical Study on Business
Game Development and Evaluation
Both Gaming Simulation and Case Method are traditional and powerful
tools to carry out educational courses in a business school. However,
there have been few studies to integrate Gaming Simulation and Case
Method methodology. This paper presents a new practical approach
for this purpose. At Graduate School of Systems Management, Tsukuba
University, we have ten years experiences on the business modeling
course with BMDL/BMDS (Business Model Description Language/ Business
Model Development System) ar-chitecture. Base on the experience,
in this paper, we have developed a new business game: ldquoCase of
Asahi Super Dryrdquo. The aim of this game is to explore managersrsquo
decision making strategies in a quantitative business operation domain
through the successful case of Japanese brewery company. Using the
developed model, we tried to evaluate the effectiveness for Case
Method on Gaming Simulation. The experimental results have suggested
the benefits of the proposed approach.","From Gaming Simulation to Case Method Empirical Study on Business
Game Development and Evaluation",0
26,"Beyond usability in games
Video games are an art form that combines traditional artistic endeavors
such as the visual arts, story-telling, and music, with more modern
technical and engineering achievements. At the center of this effort
is the game designer who drives the creative vision and who decides
what needs to be accomplished in the design and creation of the video
game. At some level, we, as user researchers, can provide input at
nearly every stage of the development process that is useful for
design, but in the end, it is not up to us to design a game. Our
role is to assist the designer in the facilitation of their game
vision, then provide feedback to help shape that vision into something
that users enjoy. Beyond previous statements made in the literature
regarding the limitations of the traditional concept of usability
for enjoyment or pleasure, there are certain concepts that we believe
are important to address in the design of video games. These include,
but are not limited to, fun, challenge, pace, learning curve, engagement,
and so on [2, 3]. One of the biggest challenges for video games is
taking these global concepts and deconstructing them into a real
gameplay experience. However, this is where we make a clear delineation
between the creation of the experience and the facilitation of the
experience, by endorsing the view of Overbeek et al. that design
should be left to designers, For too long psychologists have led
designers to make overly cognitive designs. We repeat: Design should
be left to designers! [1]. To further clarify, lets take an example
of one of the concepts listed above pace. We ve defined pace in the
past as the rate at which players experience new challenges and
novel game details.[2]. This is a very high-level definition, but
spans across most, if not all, game genres. The way that a game designer
will address pace is going to vary widely depending on the genre,
their vision, and the experience they want to create. Lets look
at two examples...",Beyond usability in games,0
27,"Games and animation: collaborations between the arts and computer
science
We explain the need for formal collaboration between students in the
arts and computer science students, and argue that this should be
encouraged at an early stage of their education. Specific courses
that foster this sort of cooperation are described.","Games and animation: collaborations between the arts and computer
science",0
28,"A 3-D computer game controller: design and applications
During the past few decades from the invention of first gaming systems,
there have been only a few designs for 3-D game controllers, most
of which were released in limited numbers due to their high cost.
These controllers were as a result targeted towards virtual reality
applications and have less been used for home gaming applications.
Ultrasonic ranging [Logitech 1992] and image processing techniques
[Marks 2000] are among the methods used to track the position of
the handheld compartment (HC) of the controller. Both of these methods
impose some requirements on the environment in which they are utilized
in, to have the desired performance. Highly reflective surfaces or
materials in the vicinity of the transceivers cause unwanted echoes
in the received signal which degrades the performance of ultrasonic
ranging methods. Image processing techniques require high processing
power and some sort of distinction, usually in color, between the
background and the HC. Additionally, both of these methods fall short
in tracking fast motions of the controller, which further limits
their application. In this work, a novel design for a 3-D computer
game controller using Micro-Electro-Mechanical-Systems (MEMS) sensors
is presented. The proposed design is virtually independent of the
environment in which it is used and requires small processing power.",A 3-D computer game controller: design and applications,0
29,"Fun and Games: Multi-Language Development
Computer games (or electronic games if you encompass those games
played on console-class hardware) comprise one of the fastest-growing
application markets in the world. Within the development community
that creates these entertaining marvels, multi-language development
is becoming more commonplace as games become more and more complex.
Today, asking a development team to construct a database-enabled
Web site with the requirement that it be written entirely in C++
would earn scornful looks and rolled eyes, but not long ago the idea
that multiple languages were needed to accomplish a given task was
scoffed at.",Fun and Games: Multi-Language Development,1
30,"Toolkits for Open Innovation The Case of Mobile Phone Games
User toolkits enable consumers to develop customized product applications
without having dedicated technical knowledge. Applied in the field
of handheld computing, toolkits are a very powerful instrument to
meet the growing demand for customized mobile applications. In this
paper, the theoretical principles and functionalities of user interaction
toolkits are translated into a technical software concept for mobile
phone games. The presented toolkit is a new Internet based application
allowing users to create a customized game on their desktop computer
and to transfer it to handheld devices. In contrast to well known
open source software development projects, no programming expertise
is required. Thus, participation of innovative users is comparatively
easy. In line with the open source concept, but as an extending feature
to the toolkit approach, the presented solution is embedded in an
online community. Thus, contributions by innovative users can be
stored in a library leading to a continuously growing information
pool of available components. Games and components can be passed
on easily between customers, facilitating the adoption of other users'
contributions as well as collaborative development between users.
The community feature of the toolkit does not only provide the common
toolset of online communities allowing for user-to-user communication,
e.g. chats and bulletin boards, or text based contributions, e.g.
recommendations, product evaluations and voting tools, but it also
enables users to exchange and jointly develop actual product prototypes.
In this regard, the presented 'toolkit for open innovation' is the
foundation of a 'value web' in a unique manner: a value web in between
consumers and users. The paper further derives economic benefits
of the developed toolkit for mobile phone game creation theoretically
and integrates them into a diversified business model. The toolkit
as a distinct performance feature has the potential to establish
a social environment for its most enthusiastic users and thereby
to strengthen user relationships with the provider and increase overall
business success.",Toolkits for Open Innovation The Case of Mobile Phone Games,0
31,"Free and open source development practices in the game community
The free and open source software (FOSS) approach lets community of
like-minded participants develop software systems and related artifacts
that are shared freely instead of offered as closed-source commercial
products. Free (as in freedom) software and open source are closely
related but slightly different approaches and licensing schemes for
developing publicly shared software. FOSS development communities
don't seem to adopt modern software engineering processes. FOSS communities
develop software that's extremely valuable, generally reliable, globally
distributed, made available for acquisition at little or no cost,
and readily used in its community. Free and open source software
development practices gives rise to new view of how complex software
systems can be constructed, deployed, and evolved. They rely on lean
electronic communication media, virtual project management, and version
management mechanisms to coordinate globally dispersed development
efforts. These FOSS processes offer new directions for developing
complex software systems. We look at the FOSS computer game community
to provide examples of common development processes and practices.",Free and open source development practices in the game community,1
32,"User Experience in Interactive Computer Game Development
This paper outlines PhD research into user experience in interactive
computer game development. The study will investigate how usability
methods and approaches can be adapted and extended to evaluate and
improve the user experience of gaming systems. The research will
focus on exploring ways to evaluate fun and engaging user experiences,
and on identifying how to provide useful, valid, timely, cost-efficient
feedback on user experience to game development teams. A range of
research methods is proposed including case studies with industry
stakeholders, contextual and lab-based user experience evaluations
with gamers, and action research within a games company. Research
findings will inform the development of a practical evaluation model
and tools to support game experience design practices and product
development.",User Experience in Interactive Computer Game Development,1
33,"Enhancing the Performance of Dynamic Scripting in Computer Games
Unsupervised online learning in commercial computer games allows computer-controlled
opponents to adapt to the way the game is being played. As such it
provides a mechanism to deal with weaknesses in the game AI and to
respond to changes in human player tactics. In prior work we designed
a novel technique called ldquodynamic scriptingrdquo that is able
to create successful adaptive opponents. However, experimental evaluations
indicated that, occasionally, the time needed for dynamic scripting
to generate effective opponents becomes unacceptably long. We investigated
two different countermeasures against these long adaptation times
(which we call ldquooutliersrdquo), namely a better balance between
rewards and penalties, and a history-fallback mechanism. Experimental
results indicate that a combination of these two countermeasures
is able to reduce the number of outliers significantly. We therefore
conclude that the performance of dynamic scripting is enhanced by
these counter-measures.",Enhancing the Performance of Dynamic Scripting in Computer Games,0
34,"Open-Source Game Development with the Multi-user Publishing Environment
(MUPE) Application Platform
The Multi-User Application Platform (MUPE) is a platform for rapid
development of mobile multi-user context-aware applications. MUPE
server implements a persistent user-authenticated service that can
be customized into a game server. The game logic is written to the
MUPE server and the end-users download the game User Interface (UI)
to their terminals. This paper studies how MUPE can be used to create
mobile multi-player games. This paper analyzes the important aspects
of MUPE in game development and the different parts involved in developing
games with MUPE. Two games made with MUPE are introduced and analyzed.
The games presented in this paper and the MUPE system are available
at the MUPE website http://www.mupe.net under the Nokia open source
license version 1.0a.","Open-Source Game Development with the Multi-user Publishing Environment
(MUPE) Application Platform",0
35,"Java technologies for games
Network games are the fastest growing segment of the games market.
The technologies required to build these massively networked games
is evolving at a rapid pace. There are many components to these technologies.
There are server, desktop client, and mobile client technologies
which enable these connected games. This article provides on overview
of the server, desktop, and mobile technologies that are available
to build a networked game with Java technology.",Java technologies for games,0
36,"Testing, Optimizaton, and Games
We discuss algorithmic problems arising in the testing of reactive
systems, i.e. systems that interact with their environment. The goal
is to design test sequences so that we can deduce desired information
about the given system under test, such as whether it conforms to
a given specification model, or whether it satisfies given requirement
properties. Test generation can be approached from different points
of view - as an optimization problem of minimizing cost and maximizing
the effectiveness of the tests; as a game between tester and system
under test; or as a learning problem. We touch on some of these aspects
and related algorithmic questions.","Testing, Optimizaton, and Games",0
37,"Extracting and Evolving Mobile Games Product Lines
For some organizations, the proactive approach to product lines may
be inadequate due to prohibitively high investment and risks. As
an alternative, the extractive and the reactive approaches are incremental,
offering moderate costs and risks, and therefore sometimes may be
more appropriate. However, combining these two approaches demands
a more detailed process at the implementation level. This paper presents
a method for extracting a product line and evolving it, relying on
a strategy that uses refactorings expressed in terms of simpler programming
laws. The approach is evaluated with a case study in the domain of
games for mobile devices, where variations are handled with aspect-oriented
constructs.",Extracting and Evolving Mobile Games Product Lines,0
38,"A practical implementation of a 3D game engine
Creating a 3-D game engine is not a trivial task as gamers often demand
for high quality output with top notch performance in games. In this
paper, we show you

how various real-time rendering algorithms can be applied to implement
a practical 3-D game engine. We explore the general architecture
of a 3-D engine and

discuss the role of a scene graph in a 3-D engine. We will look at
scene graph from the software engineering perspective. In particular,
we show you the way to design

a scene graph that is object-oriented and portable across different
rendering engine. Then, we explain the algorithms that we apply to
speed up the performance of

our 3-D engine. We optimize the 3-D engine on the scene graph and
object geometry levels. The algorithms that we propose are expected
to perform reasonably well for both static and dynamic scenes. Finally,
we give you a brief preview on the possibility of parallel processing
in scene graph to create a 3-D engine with multiprocessing

capability.",A practical implementation of a 3D game engine,1
39,"Multi-platform Online Game Design and Architecture
Contemporary Multi-player online games (MOGs) support only a single
game platform. Our research goal is to provide an MOG service to
users from different platforms. This paper presents the architecture
of the world-wide first multi-platform online game, which consists
of 3D game engines and a multi-platform game server. The experimental
results through the prototype implementation show the feasibility
of simultaneously supporting multiple game platforms.",Multi-platform Online Game Design and Architecture,1
40,"Beneficial Dependencies: Design Principles for Narrative Games
This paper presents the leitmotifs of current research on psychologically
colored interactive narration. Virtual Characters, their stories
and adventures are in focus, and not the story of the user. The concept
of a Capricious Non-Player Character (C-NPC) is introduced as a new
kind of agent appropriate for such stories. A C-NPC expects consideration
and support, even towards its technological limitations. A narrative
educational game is presented that functions as a testbed for the
creation of C-NPCs. An overview of the technology employed for dialogue
management is provided.",Beneficial Dependencies: Design Principles for Narrative Games,0
41,"Establishing user requirements: incorporating gamer preferences into
interactive games design
In a previous paper we investigated how various aspects of rally/racing
game design can be quantified for the development of future titles.
This paper explores how gamer preferences can be prioritised, analysed,
and incorporated into the design of rally games by structuring information
via a technique known as the Analytic Hierarchy Process, so as to
allow the data to be put to practical effect by games designers.
Combined with other techniques developed by the authors of this paper,
the results can be used for a holistic management of the design and
development process for many categories of interactive video games.","Establishing user requirements: incorporating gamer preferences into
interactive games design",1
42,"The structure of games
Computer Game Playing has been an active area of research since Samuel s
first Checkers player (Samuel 1959). Recently interest beyond the
classic games of Chess and Checkers has led to competitions such
as the General Game Playing competition, in which players have no
beforehand knowledge of the games they are to play, and the Computer
Poker Competition which force players to reason about imperfect information
under conditions of uncertainty. The purpose of this dissertation
is to explore the area of General Game Playing both specifically
and generally. On the specific side, we describe the design and implementation
of our General

Game Playing system OGRE. This system includes an innovative method
for feature extraction that helped it to achieve second and fourth
place in two international General Game Playing competitions. On
the more general side, we also introduce the Regular Game Language,
which goes beyond current works to provide support for both stochastic
and imperfect information games as well as the more traditional games.",The structure of games,0
43,"A challenge for reusing multiplayer online games without modifying
binaries
In this paper, we advocate the problem of reusing Multiplayer Online
Game (MOG) in Client-Server (C/S) architecture. The problem is that
MOG services cannot continue to be provided because of high maintenance
cost for operating game servers. Additionally, it is caused by the
decreasing service users who getting tired of the game and game providers
who have faced difficulties in collecting charge of the game service.
It is important that every user can play MOGs at any time whether
game servers of game providers run them or not.We describe a challenging
method for solving the problem. Our solution provides a middleware
which is inserted under the game applications to switch network architecture
from C/S to Peer-to-Peer (P2P). By exploiting this method, the network
architecture of MOGs can be easily changed from C/S to P2P under
some restrictions without modifying binaries.","A challenge for reusing multiplayer online games without modifying
binaries",0
44,"Adaptive server selection for large scale interactive online games
Large scale interactive online games aim to support a very large number
of game players simultaneously. To support hundreds of thousands
of concurrent players, game providers have so far focused on developing
highly scalable game server architectures and extensible network
infrastructures. Recently, distributed online games are beginning
to incorporate more interactive features and action sequences; thus,
it becomes increasingly important to provision server resources in
an efficient manner to support real-time interaction between the
users. In this paper, we present a novel distributed algorithm to
select game servers for a group of clients participating in a large
scale interactive online game session. The goal of server selection
is to minimize the server resource usage while satisfying a real-time
delay constraint. We develop a synchronization delay model for interactive
games and formulate the server selection problem, and prove that
the considered problem is NP-hard. The proposed algorithm, called
zoom-in zoom-out, is adaptive to session dynamics (e.g., clients
join) and lets the clients select appropriate servers in a distributed
manner such that the server resource is efficiently utilized. Using
simulation, we study the performance of the proposed algorithm and
show that it is simple, yet effective in achieving its design goal.
In particular, we show that the performance of our algorithm is comparable
to, or sometimes even better than, that of centralized greedy algorithms,
which require global information and extensive computations.",Adaptive server selection for large scale interactive online games,0
45,"Game design through self-play experiments
The application of self-play experiments to computer games was pioneered
by Thompson in 1982 with his chess machine BELLE. Since then the
technique has been widely used in a variety of games to train artificial
players employing a range of artificial neural network architectures.
Of particular note is the TD-learning Backgammon program of Tesauro
developed in 1995. When developing artificial game players that learn
by experience, it is generally possible to accelerate the training
process through self-play. Compared with training by humans, this
confers the advantages of greater speed and a precise control of
playing strength through parameter variation. In spite of these potential
advantages, the use of self-play experiments is considered by many
to be a treacherous road fraught with problems. The value of such
experiments is unclear and the threshold of learning that can be
achieved through self-play alone is unknown. There is the common-sense
perception that only limited playing skill can be achieved through
machine self-play, a notion that is challenged here. A new application
that is immune from the problems associated with machine learning
is the use of self-play experiments to test the integrity and fairness
of games and modify the rules accordingly. We will show how the rules
of a particular game, Perudo, can be analysed for fairness and how
the excessive positive feedback that arises when forces become unbalanced
can be curbed. We use the notion of fair in the same sense as in
a soccer game - if a team loses a goal, neglecting psychological
effects, the chance of losing a second goal is not significantly
changed. It is recognised that the cumulative growth in advantage
is part of many games and that it is inappropriate to alter the rules
in these cases. However the rate at which advantages grow can be
moderated by rule alterations. We will also consider the application
of the technique to a range of traditional games. In chess, for example,
White is considered to have an advantage over Black. The imbalance
can be determined for different playing strengths and extrapolated.
We will show that the principles can be extended to the more complex
situations of computer games and propose that the development of
unintelligent agents to explore game play is advantageous.",Game design through self-play experiments,0
46,"Interest management middleware for networked games
In this paper we present an implementation of an interest management
scheme using standard message oriented middleware (MOM) technologies
to provide scalable message dissemination for networked games. The
aim of all interest management schemes is to identify when objects
that inhabit a virtual world should be interacting and to enable
such interaction via message passing while preventing objects that
should not be interacting from exchanging messages. The time taken
by existing interest management schemes to resolve which objects
influence each other may be too large to enable the desired interaction
to occur. Furthermore, existing interest management implementations
tend to be proprietary and are built directly on top of networking
protocols. In this paper we present an approach to interest management
based on the predicted movement of objects. Our approach determines
the frequency of message exchange between objects on the likelihood
that such objects will influence each other in the near future. We
then demonstrate, via implementation and experimentation, how existing
middleware standards provide a suitable platform for the deployment
of our interest management scheme.",Interest management middleware for networked games,0
47,"Sensorium games: usability considerations for pervasive gaming
The Sensorium family of games provides a platform and environment
for multiplayer games in a pervasive environment. Each player is
equipped with a mote, which (along with those of other players) is
an element in a wireless sensor network. Sensorium games are pervasive
in the truest sense: that is, sensory events in the environment trigger
events in the game. For example, walking under a light may cause
a loss of game lives.In this paper, we describe the Sensorium game
platform and Trove, an implemented game which is a member of the
Sensorium family. We describe our experiences of player Trove and
heuristic evaluations of its usability.",Sensorium games: usability considerations for pervasive gaming,0
48,"IntelligentBox as component based development system for body action
3D games
This paper treats component based approach for the development of
body action 3D games. The research group of the author has already
proposed a 3D software development system called IntelligentBox.
IntelligentBox has provided various software components called boxes,
which are 3D visible, reactive objects. IntelligentBox allows the
user to develop 3D graphics applications including 3D games by combining
already existing boxes through direct manipulations on a computer
screen. This is the main feature of IntelligentBox, which is a difference
from other conventional systems. In this paper, the author introduces
the extension of IntelligentBox to the development of body action
3D games. To deal with body actions, various components, i.e., particular
boxes, those handle input devices frequently used in virtual reality
applications, are introduced to IntelligentBox. Furthermore, the
author introduced a particular component called virtual mouse pointer
to make it possible to manipulate 3D objects using an input device
like a data-glove.","IntelligentBox as component based development system for body action
3D games",0
49,"Framework for evaluation of networked mobile games
In this position paper we propose an evaluation framework for networked
mobile gaming, consisting of user, group, communication, and environment
models. Each of these components acts as a detailed representation
of real-world characteristics. The combination of these models allows
a realistic modeling of mobile gaming scenarios. The main contribution
of our approaches is a new class of mobility models, which are purely
based on strategies derived from real-world scenarios. This allows
us to simulate the behavior and the movement of users and groups,
and the communication aspects, and thus, it facilitates a creation
of test beds for mobile applications. These simulated users interact,
e.g. communicate, with each other and are able to move purposeful
as well as to build groups spontaneously depending on the similarity
of their goals or individual strategies. The paper presents an analytic
discussion of the framework, its architecture, and the current state
of its implementation.",Framework for evaluation of networked mobile games,0
50,"Story creation in virtual game worlds
Allowing young people to create computer games they will ultimately
want to play not only offers key educational benefits but builds
self-esteem and teamwork skills.",Story creation in virtual game worlds,0
51,"Designing a narrative-based audio only 3D game engine
Immersing players in believable and engaging virtual environments
is a common goal for many interactive computer games. While PC-based
audio only games set in virtual worlds have traditionally been developed
for blind players, new technology will soon create a market for audio
only games aimed at a mass audience. We propose a framework for authoring
interactive narrative-based audio only adventure games set in 3D
virtual environments. Our work builds on several years of research
into audio only applications for sight impaired users, augmented
reality systems and human-computer interaction studies. We argue
that a simple user interface enhances both immersion and entertainment
value, making audio only games practical for mobile computing. Novel
features of our system include real-time gameplay and support for
multiple players. We also describe a software architecture for creating
audio only games, the current implementation of which uses low-cost
existing PC-based hardware and software.",Designing a narrative-based audio only 3D game engine,1
52,"A real-time collision detection algorithm for mobile billiards game
Collision detection is a key technique in game design. However, some
algorithms employed in PC game are not suitable for mobile game because
of the low performance and small screen size in mobile devices. Combining
with the features of the mobile devices, this paper proposes a quick
and feasible collision detection algorithm. This algorithm makes
use of the multi-level collision detection and dynamic multi-resolution
grid subdivision to reduce the computing time for collision detection,
which improves the algorithm performance greatly. In the collision
response phase, this paper adopts the time step binary search algorithm
to ensure both the computing precision and system efficiency. The
mobile billiards game designed for the Bird Company indicates that
this algorithm has good performance and real-time interaction.",A real-time collision detection algorithm for mobile billiards game,0
53,"Player Modeling Impact on Players Entertainment in Computer Games
In this paper we introduce an effective mechanism for obtaining computer
games of high interest (i.e. satisfaction for the player). The proposed
approach is based on the interaction of a player modeling tool and
a successful on-line learning mechanism from the authors previous
work on prey/predator computer games. The methodology demonstrates
high adaptability into dynamical playing strategies as well as reliability
and justifiability to the game user.",Player Modeling Impact on Players Entertainment in Computer Games,1
54,"Interweaving mobile games with everyday life
We introduce a location--based game called Feeding Yoshi that provides
an example of seamful design, in which key characteristics of its
underlying technologies-the coverage and security characteristics
of WiFi-are exposed as a core element of gameplay. Feeding Yoshi
is also a long--term, wide--area game, being played over a week between
three different cities during an initial user study. The study, drawing
on participant diaries and interviews, supported by observation and
analysis of system logs, reveals players' reactions to the game.
We see the different ways in which they embedded play into the patterns
of their daily lives, augmenting existing practices and creating
new ones, and observe the impact of varying location on both the
ease and feel of play. We identify potential design extensions to
Feeding Yoshi and conclude that seamful design provides a route to
creating engaging experiences that are well adapted to their underlying
technologies.",Interweaving mobile games with everyday life,0
55,"The distinctive challenges of pervasive games as distributed real-time
applications
Summary form only given. Pervasive games are an emerging form of distributed
real-time application that extend computer gaming out into the real
world. From the city streets to the remote wilderness, players with
mobile computing devices move through the world, sensors capture
information about their current context, including their location,
and this is used to deliver a gaming experience that adapts to where
they are, what they are doing, and even how they are feeling. Players
becomes unchained from their consoles and experience a game that
is interwoven with the real world and that is potentially available
at any place and any time. Pervasive games raise significant new
challenges for the designers of distributed real-time applications,
many of which arise from the distinctive characteristics of the underlying
fabric of sensing and wireless communications technologies that constitute
the ubiquitous computing infrastructure. Drawing on a series of recent
collaborations with artists to develop, tour and study pervasive
games, the author articulates these distinctive design challenges,
exploring issues such as support for location-based play, revealing
the nature of the ubiquitous infrastructure to designers, and adapting
long-term persistent games with patterns of daily life.","The distinctive challenges of pervasive games as distributed real-time
applications",0
56,"Game Development: Harder Than You Think
The hardest part of making a game has always been the engineering.
In times past, game engineering was mainly about low-level optimization writing
code that would run quickly on the target computer, leveraging clever
little tricks whenever possible.",Game Development: Harder Than You Think,1
57,"Requirements engineering and the creative process in the video game
industry
The software engineering process in video game development is not
clearly understood, hindering the development of reliable practices
and processes for this field. An investigation of factors leading
to success or failure in video game development suggests that many
failures can be traced to problems with the transition from preproduction
to production. Three examples, drawn from real video games, illustrate
specific problems: 1) how to transform documentation from its preproduction
form to a form that can be used as a basis for production;, 2) how
to identify implied information in preproduction documents; and 3)
how to apply domain knowledge without hindering the creative process.
We identify 3 levels of implication and show that there is a strong
correlation between experience and the ability to identify issues
at each level. The accumulated evidence clearly identifies the need
to extend traditional requirements engineering techniques to support
the creative process in video game development.","Requirements engineering and the creative process in the video game
industry",1
58,"Emotional Requirements in Video Games
Requirements engineering for video games must address a wide range
of functional and non-functional requirements. Video game designers
are most concerned with capturing and representing the player experience:
the means by which the player's consciousness is cognitively engaged
while simultaneously inducing emotional responses. We show that emotional
requirements can be expressed in two parts: as the emotional intent
of the designer and the means by which the designer expects to induce
the target emotional state. Spatial and temporal qualifiers on intent
and means may also be required. We introduce emotional terrain maps,
emotional intensity maps, and emotion time lines as visual mechanisms
for capturing and expressing emotional requirements. Using a first-person
shooter example, we show that these mechanisms can express the desired
emotional requirements while providing support for spatial and temporal
qualifiers.",Emotional Requirements in Video Games,1
59,"Introductory game creation: no programming required
Many incoming college freshmen have accumulated a significant number
of hours of experience playing computer games. Extending that experience
to actual game creation activities can be highly motivational for
these students. Most of these activities require some level of programming
expertise, however, making them activities too advanced for the majority
of incoming students.In this paper, we describe a freshman-level
course called Problem Solving through Game Creation. Students learn
to use a number of drag-and-drop game creation tools to develop both
2D and 3D games, with no programming required in the course. We also
cover a variety of other topics and tools related to game development.Our
experience has been that students enjoy the course, but we have more
formal course goals as well. Specifically, we hope to motivate students
to declare and complete the computer science major and to better
prepare students for the initial required computer science courses.
We describe these goals in detail and discuss the process we have
initiated to continually evaluate achievement of those goals.",Introductory game creation: no programming required,0
60,"Evolution of 3D games on mobile phones
While there is no doubt that there will be an increasing trend towards
3D games on mobile devices the resource constraints of the devices
themselves and the highly variable nature of the environment present
considerable challenges for games developers. In this paper we consider
some of the current constraints together with current and, probable,
future developments both in the software and hardware of mobile phones
that will enable more sophisticated games to be developed. As part
of this process we benchmark some of the latest and most prevalent
software and devices to ascertain both the quality of the graphics
produced and the effects on the battery life. Whilst we are certain
that 3D games play an important future in the success of future mobile
services the current baseline for development is highly variable
and presents difficulties for games programmers both in development
and wide scale distribution.",Evolution of 3D games on mobile phones,0
61,"Dynamic Terrain LOD with Region Preservation in 3D Game Engine
In the outdoor 3D game, the terrain can be modified because of interaction.
This brings two new complexities to render terrain in 3D game. The
first lies in the real-time visualization of dynamic terrain, and
the second is that the modified terrain surface need to be preserved.
We present an algorithm for dynamic terrain LOD(DT LOD) with preserving
region in 3D game engine. The algorithm uses a DAG to represent dependency
relationship of vertices which split triangles, and employs an active
vertices set to update triangles in two consecutive frames for improving
rendering performance. The region LOD can be constructed according
to the view direction and the distance between the viewpoint and
regions. The results of experiments show that our algorithm has a
effective performance during rendering terrain.",Dynamic Terrain LOD with Region Preservation in 3D Game Engine,0
62,"Design implications of social interaction in online games
While psychologists analyze network game-playing behavior in terms
of players social interaction and experience, understanding user
behavior is equally important to network researchers, because how
players act determines how well systems, such as MMORPGs, perform.
To gain a better understanding of patterns of player interaction
and their implications for game design, we analyze a 1,356-million-packet
trace of ShenZhou Online, a mid-sized commercial MMORPG. To the best
of our knowledge, this work is the first to put forward architectural
design recommendations for online games based on analysis of player
interaction.

We find that the dispersion of players in a virtual world is heavy-tailed,
which implies that static and fixed-size partitioning of game worlds
is inadequate. Neighbors and teammates tend to be closer to each
other in network topology. This property is an advantage, because
message delivery between the hosts of interacting players can be
faster than between those of unrelated players. In addition, the
property can make game playing fairer, since interacting players
tend to have similar latencies to their servers. We also find that
participants who have a higher degree of social interaction tend
to play much longer, and players who are closer in network topology
tend to team up for longer periods. This suggests that game designers
could increase the stickiness of games by supporting, or even forcing,
team playing.",Design implications of social interaction in online games,0
63,"User-System-Experience Model for User Centered Design in Computer
Games
This paper details the central ideas to date, from a PhD entitled
Player Profiling for Adaptive Artificial Intelligence in Computer
and Video Games. Computer and videogames differ from other web and
productivity software in that games are much more highly interactive
and immersive experiences. Whereas usability and user modelling for
other software may be based on productivity alone, games require
an additional factor that takes account of the quality of the user
experience in playing a game. In order to describe that experience
we describe a model of User, System and Experience (USE) in which
the primary construct for evaluation of a players experience will
be the Experience Fluctuation Model (EFM), taken from Flow theory.
We illustrate with a straightforward example how this system may
be automated in real-time within a commercial game.","User-System-Experience Model for User Centered Design in Computer
Games",0
64,"Evaluating pattern catalogs: the computer games experience
Patterns and pattern catalogs (pattern languages) have been proposed
as a mechanism for re-use. Traditionally, patterns have been used
to foster design re-use, and generative design patterns have been
used to achieve both design and code re-use. In theory, a pattern
catalog could be created and used to provide re-usable patterns within
a project and across a group of related projects. This idea raises
a natural question. How can we measure the effectiveness of a pattern
catalog or compare the effectiveness of different pattern catalogs?
In this paper, we define four metrics that can be used to measure
the effectiveness of pattern catalogs. We illustrate these metrics
by applying them to a case study that uses a pattern catalog of generative
design patterns to generate scripting code for computer games. The
metrics are general enough to assess any pattern catalog, independent
of application domain or whether the patterns are generative or descriptive.",Evaluating pattern catalogs: the computer games experience,0
65,"The Delta3D Open Source Game Engine
What is it that all game engines and visual simulation tools have
in common? A lot, as it turns out. In fact, game engines have so
much in common that you have to wonder if they should actually be
a commodity and they should be. That advanced feature that makes
one game engine different from all the rest is part of the reason
why game engines and visual simulation tools cost so much. Furthermore,
most game engines have a unique development pipeline associated with
them. The way content is developed and integrated is specific to
that engine, implying limited (if any) portability and reuse. This
business model is perfectly appropriate for the entertainment industry
where having the latest graphics features can make or break a title,
but to the training community, the model simply does not work. We
need to think differently....",The Delta3D Open Source Game Engine,0
66,"Game development
abstract not founded: Game development",Game development,0
67,"Go with the flow or seize control? interaction principles that make
games enjoyable
A series of design principles relevant to creating graphics for games
interfaces were interpreted from the work of leading interaction
experts. Students studying for an MSc in Computer Games Graphics
were asked to explore how the principles might improve enjoyment
of a game. The graduates of the course consider visual themes and
their layout; they were asked to develop graphical designs to test
ideas and evaluate them within the group. The purpose of the activity
was to consider how

emotional responses might be improved, during game play, beyond levels
of satisfaction usually asociated with usability.","Go with the flow or seize control? interaction principles that make
games enjoyable",0
68,"Playability heuristics for mobile games
Expert evaluation is a widely used method for evaluating the usability
of software products. When evaluating games, traditional usability
heuristics lack comprehension and cannot be directly applied. In
this paper, we introduce playability heuristics that are specifically
designed for evaluating mobile games. Heuristics form a core model
that can be used in any mobile game evaluation. The model consists
of three modules: Game Usability, Mobility, and Gameplay. The mobile
context has some unique characteristics, which require special attention
during the evaluation. These characteristics are described in mobility
heuristics. Mobile devices also set some of their own requirements
for general usability and these issues are described along with game
usability heuristics. These heuristics have been developed by using
an iterative design process of a mobile game. In addition, we have
validated the heuristics and evaluated five mobile games by using
them with the expert evaluation method. The results indicate that
playability problems, which violate game usability or mobility heuristics,
are quite easy to identify. Gameplay problems are harder to find,
but gameplay heuristics help in evaluation and focus on different
aspects of the gameplay.",Playability heuristics for mobile games,0
69,"Playability heuristics for mobile games
Expert evaluation is a widely used method for evaluating the usability
of software products. When evaluating games, traditional usability
heuristics lack comprehension and cannot be directly applied. In
this paper, we introduce playability heuristics that are specifically
designed for evaluating mobile games. Heuristics form a core model
that can be used in any mobile game evaluation. The model consists
of three modules: Game Usability, Mobility, and Gameplay. The mobile
context has some unique characteristics, which require special attention
during the evaluation. These characteristics are described in mobility
heuristics. Mobile devices also set some of their own requirements
for general usability and these issues are described along with game
usability heuristics. These heuristics have been developed by using
an iterative design process of a mobile game. In addition, we have
validated the heuristics and evaluated five mobile games by using
them with the expert evaluation method. The results indicate that
playability problems, which violate game usability or mobility heuristics,
are quite easy to identify. Gameplay problems are harder to find,
but gameplay heuristics help in evaluation and focus on different
aspects of the gameplay.",Playability heuristics for mobile games,1
70,"Dynamic Game Level Design Using Gaussian Mixture Model
In computer games, the level design and balance of character attributes
are the key features of interesting games. Level designers adjust
the attributes of the game characters and opponent behavior to create
appropriate levels of difficult, and avoid player frustration. Generally,
opponent behavior is defined by a static script, however, this results
in repetitive levels and environments, making in difficult to maintain
the player s interest. Accordingly, this paper proposes a dynamic
scripting method that can sustain the degree of interest intended
by the level designer by adjusting the opponent behaviors while playing
the game. The player s countermeasure pattern for dynamic level design
is modeled using a Gaussian Mixture Model (GMM). The proposed method
is applied to a shooter game, and the experimental results maintain
the degree of interest intended by the level designer.",Dynamic Game Level Design Using Gaussian Mixture Model,0
71,"An Empirical Model of the Game Software Development Processes
One of the hottest and fastest developing areas of computer software
in Korea is computer game software. However, due to relatively young
history and empirical nature of the area, there has not been any
agreement or standardization of game software process design for
its efficacy. In this paper, we propose a practical model of the
game software development processes, which can be easily applicable
to the traditional software development based on ISO12207 and/or
RUP through the panel interview of game developers. We evaluate the
model by on-line survey of another set of practical game developers
and break down the results by game platform and game genre. And the
results are quite promising.",An Empirical Model of the Game Software Development Processes,1
72,"A Component-Based Framework to Rapidly Prototype Online Chess Games
for Home Entertainment
To reduce the cost and risk of developing computer games, game developers
are increasingly adopting software engineering methods to produce
game engines or middleware. In this paper, we take such an approach
to develop a software framework for rapidly prototyping online chess
games. A set of application programming interfaces (APIs) is pre-defined
to deal with the technical details. Following the provided guidelines,
any game programmer can use APIs to develop his own games in a time-efficient
manner, and can connect the game to the platform as an application
for all online players. To demonstrate how our framework can be used
to develop a game conveniently and efficiently, we have used it to
design a well-known Chinese chess game as an example.","A Component-Based Framework to Rapidly Prototype Online Chess Games
for Home Entertainment",1
73,"Large Display Size Enhances User Experience in 3D Games
Large displays are becoming commonplace for home and office computers.
Although researchers have quantified the benefits of working on large
displays, there has been little investigation of how large displays
physiologically and emotionally impact the user. Using subjective
and physiological measures, we compared the users experience when
game playing on a large display versus a small display. We found
that the large display caused greater physiological responses and
higher subjective ratings of excitement. These physiological results
were mirrored in the participants subjective reports. The study
contributes to understanding of interaction with large displays and
refining the requirements for what constitutes effective and desirable
humancomputer interaction (HCI).",Large Display Size Enhances User Experience in 3D Games,0
74,"Challenges in collaborative game design developing learning environments
for creating games
We perform a general analysis of the game design process, the structure
of digital games and investigate the requirements for the use of
OpenCroquet as a platform for collaborative game design. Based on
our experiences of using a Squeak/Tweak programming environment in
many game projects and recently for teaching game design we derive
properties of a learning environment for teaching game design in
an OpenCroquet environment with a special focus on collaboration.","Challenges in collaborative game design developing learning environments
for creating games",0
75,"Learning object-oriented design by creating games
Playing computer games is a popular recreational activity for young
people. Creating a state-of-the-art commercial computer game is an
incredibly difficult task. Writing a game like Pac-Man from scratch
in a modern programming language is still difficult. Fortunately,
several currently available tools make game creation easier. These
tools can be used to create more complex games, but they offer only
limited programming possibilities. Many similar packages exist. One
such program is Game Maker, which is a rapid-application development
tool. The Game Maker interface uses an object-oriented, event-driven
approach. With Game Maker's drag-and-drop techniques, users can create
games without writing a single line of code. But the program also
includes an interpreted programming language. The program produces
stand-alone games that can be distributed freely: a version of Game
Maker, itself, is available for free as well.",Learning object-oriented design by creating games,0
76,"Improving Game Processing in Multithreading and Multiprocessor Architecture
This paper explores the idea that future game consoles and computers
may no longer be single processor units, but instead symmetrical
multiprocessor units. If this were to occur games would need to be
programmed with concurrency in mind so that they could take advantage
of the additional processing units. We explore past research and
works in the field of parallel computing to find principles applicable
to computer game programming. Concepts such as the Flynns classification,
task, task-dependency graphs, dependency analysis, and Bernsteins
conditions to concurrency are applied to computer game programming
to develop a new model for computer games that is meant to replace
the standard sequential game loop.",Improving Game Processing in Multithreading and Multiprocessor Architecture,1
77,"Spectral Lines: Software Development: Game Over?
Computer-game developers of the world, unite! A surprising legal victory
against too much work for too little pay has come out of the US $10.5
billion gaming industry.

Software publishing is booming, so why are the people in it so unhappy
with their game-writing jobs? Gaming software development is notorious
for the long hours put in by the folks who grind out the code. And
their employers have come to expect a level of commitment that includes
long days and nights of voluntary service from their mostly young
employees. So much so that some firms take this unpaid overtime for
grantedeven building it into their planning and forecasting. But
now the issue has escalated for all concerned, including the worlds
biggest game developer, Electronic Arts Inc., of Redwood City, Calif...",Spectral Lines: Software Development: Game Over?,0
78,"Managing Projects in a Games Factory: Temporality and Practices
The online gaming world is growing voraciously and so too is the wider
market for computer games which now exceeds the annual global revenues
of cinema. Even so, we have only a limited scholarly understanding
of how games studios produce games. Games projects require particular
attention because their context is unique. We aim to elucidate the
games development process from a time perspective and suggest ways
of managing it. We argue that a games project is characterised by
a compound of temporal rhythms that emanate from the individual,
team, company, industry, nation, inter-nation and marketplace levels.
Project managers need to take account of these 'inner' and 'outer'
temporal rhythms since they can affect development culture and project
chronology.",Managing Projects in a Games Factory: Temporality and Practices,1
79,"Player-centred game design
Videogames are not your typical software application. They are often
designed to elicit a negative emotional response, such as frustration
or fear, the antithesis of usability. However, this is not to suggest
that HCI has little to offer the game design community. Indeed, the
exact opposite appears to be true. A number of user-centred design
techniques have evolved which can support each stage of the game
design process, from concept through to post-production. However,
there is currently no archive of appropriate techniques showing how
they might be applied to videogame design. Given the differences
in goals from these products to traditional software, this is clearly
necessary. The purpose of this workshop is to identify those techniques
appropriate to game design, and elicit practitioners' experience
when applying such methodologies. The intended result is a prescriptive
process which demonstrates how user-centred methodologies can best
be applied to game design.",Player-centred game design,0
80,"Computer game-flow design
Computer games are a rapidly growing segment of the entertainment
industry. Design and development of modern computer games can be
a complex activity involving many participants from a variety of
disciplines. However, computer game design approaches typically appear
to be less formalised than those used for other types of software
systems. In this article we describe an approach to computer game-flow
design intended for the design of individual game levels within a
computer game and demonstrate its application in practice.",Computer game-flow design,1
81,"Introducing EVG: An Emotion Evoking Game
A dungeon role playing game intended to induce emotions such as boredom,
surprise, joy, anger and disappointment is introduced. From the preliminary
study, facial expressions indicating boredom and anger were observed.
Individual differences were found on appraisal and facial expression
of surprise, joy and disappointment.",Introducing EVG: An Emotion Evoking Game,0
82,"Empirical Validation of Test-Driven Pair Programming in Game Development
This paper investigates the effects of some extreme programming practices
in game development by conducting a case study with 12 students who
were assigned to implement a simple game application either as pairs
or as individuals. The pairs used some XP practices, such as pair
programming, test-driven and refactoring, while the individuals applied
the traditional waterfall-like approach. The results of the case
study showed that paired students completed their tasks faster and
with higher quality than individuals. The programs written by pairs
pass more test cases than those developed by individuals. Paired
programmers also wrote cleaner code with higher cohesion by creating
more reasonable number of methods. Therefore, some XP practices,
such as pair programming, test-driven and refactoring could be used
in game development.",Empirical Validation of Test-Driven Pair Programming in Game Development,1
83,"Towards Capturing and Enhancing Entertainment in Computer Games
This paper introduces quantitative measurements/metrics of qualitative
entertainment features within computer game environments and proposes
artificial intelligence (AI) techniques for optimizing entertainment
in such interactive systems. A human-verified metric of interest
(i.e. player entertainment in real-time) for predator/prey games
and a neuro-evolution on-line learning (i.e. during play) approach
have already been reported in the literature to serve this purpose.
In this paper, an alternative quantitative approach to entertainment
modeling based on psychological studies in the field of computer
games is introduced and a comparative study of the two approaches
is presented. Artificial neural networks (ANNs) and fuzzy ANNs are
used to model player satisfaction (interest) in real-time and investigate
quantitatively how the qualitative factors of challenge and curiosity
contribute to human entertainment. We demonstrate that appropriate
non-extreme levels of challenge and curiosity generate high values
of entertainment and we discuss the extensibility of the approach
to other genres of digital entertainment and edutainment.",Towards Capturing and Enhancing Entertainment in Computer Games,0
84,"Creating Emotions by Characters Design for Computer Games
Firstly, the methodology for characters development in computer games
was analyzed from both aspects of art-sourced character development
and story-sourced character development separately from the different
views of various research fields. In the second section, four different
techniques relating to character design and the creation of emotion
has been deeply discussed. At the end, the four diverse designs for
character OEDIPUS were given according to the plot development based
on the background of tragical fable of the ancient Greece.",Creating Emotions by Characters Design for Computer Games,0
85,"Challenges in Requirements Engineering for Mobile Games Development:
The Meantime Case Study
The development of new market-driven software products involves several
challenges for the requirements engineering process. The challenges
are deeper in the case these products are mobile video games. In
particular, the mobile games must satisfy a number of critical non-functional
requirements (e.g. portability, gameplay, emotional issues). In addition
to that, mobile games are developed for mass market, demanding from
the development team to understand the requirements of very diverse
and sometimes unknown groups of stakeholders. This paper presents
the experience of meantime, a global mobile game developing company,
in conducting requirements engineering activities during the development
of the Frogman game. It also presents some lessons learned in the
process.","Challenges in Requirements Engineering for Mobile Games Development:
The Meantime Case Study",1
86,"Evaluation of object-oriented design patterns in game development
The use of object-oriented design patterns in game development is
being evaluated in this paper. Games quick evolution, demands great
flexibility, code reusability and low maintenance costs. Games usually
differentiate between versions, in respect of changes of the same
type (additional animation, terrains etc). Consequently, the application
of design patterns in them can be beneficial regarding maintainability.
In order to investigate the benefits of using design patterns, a
qualitative and a quantitative evaluation of open source projects
is being performed. For the quantitative evaluation, the projects
are being analyzed by reverse engineering techniques and software
metrics are calculated.",Evaluation of object-oriented design patterns in game development,1
87,"A model of cognitive loads in massively multiplayer online role playing
games
Being one of the most commercially successful entertainment software
applications, massively multiplayer online role playing games (MMORPGs)
continue to expand in term of the revenue they generate as well as
the involvement of users who congregate in their virtual space and
form communities around them to support each other. Unlike conventional
offline computer games, or networked games with limited numbers of
players, MMORPGs are not merely software applications as they are
usually seen as a space with complicated dynamics of social interactions.
Hence, it is believed that playing these games might cause cognitive
overload problems among the players as they have to constantly interact
with the game world as well as with other users. We conducted an
exploratory study using qualitative methods to explore cognitive
overloads in Maple Story, a typical MMORPG. Our results reveal that
several types of cognitive overloads emerge during the game playing.
While some of these overloads pose serious problems even to expert
players, players seem to develop strategies to overcome them. It
is found that some forms of cognitive load are actually desirable
in order to make the game challenging. We have also created a set
of recommendations that can help game developers handle cognitive
load problems in MMORPGs.","A model of cognitive loads in massively multiplayer online role playing
games",0
88,"Identifying usability and fun problems in a computer game during
first use and after some practice
This paper describes an experiment to discover the change in the types
of detected problems and the attitude of children towards a game
when user testing a computer game for young children during first
use and after they have practiced with a game. Both the numbers of
different types of identified problems and the severity of the problems
are investigated. Based on this knowledge, practitioners could adapt
the set up of their user tests to effectively find as many aspects
of the game as possible that merit change, according to the aims
of the developers. The study shows that usability problems caused
by a lack of knowledge were more often identified during first use.
Furthermore, fun problems related to a too-high challenge level may
disappear after some practice, whereas fun problems caused by the
game taking over control for too long while the user wants to proceed
playing the game were identified more often after some practice.
The study shows that the impact severity of problems detected during
first use was higher than when children had more practice with a
game. As a result of these changes in experienced problems the commonly
used measures efficiency, effectiveness and satisfaction increased
when children had practiced with the game. Finally, the study also
shows that the set of most severe problems identified during first
use may be radically different from the set of most severe problems
identified after some practice.","Identifying usability and fun problems in a computer game during
first use and after some practice",1
89,"Video game values: Human computer interaction and games
Current human computer interaction (HCI) research into video games
rarely considers how they are different from other forms of software.
This leads to research that, while useful concerning standard issues
of interface design, does not address the nature of video games as
games specifically. Unlike most software, video games are not made
to support external, user-defined tasks, but instead define their
own activities for players to engage in. We argue that video games
contain systems of values which players perceive and adopt, and which
shape the play of the game. A focus on video game values promotes
a holistic view of video games as software, media, and as games specifically,
which leads to a genuine video game HCI.",Video game values: Human computer interaction and games,0
90,"Using emotion in games: emotional flowers
It can be argued that one of the main reasons for playing games is
to achieve an emotional reaction of the player. To be surprised,
happy, angry or anxious - to perceive different emotional states
- is one of the main reasons to play games. The ""Emotional Flowers""
game harnesses the player's emotions as the primary means for the
game interaction. Within the game the player's facial expression
of emotion is used to control the growth of a flower. Multiple players
can play ""Emotional Flowers"" simultaneously. The main idea is to
grow the flower as fast as possible based on positive emotions like
happiness and surprise. Flowers of all participants within the game
are additionally displayed on an ambient display in a public area.
This influences not only emotions by the user, but also has an effect
on social interactions within the group of players. In this paper,
we present design, implementation and evaluation of the ""Emotional
Flowers"" game.",Using emotion in games: emotional flowers,0
91,"Measuring Game-Play Performance and Perceived Immersion in a Domed
Planetarium Projection Environment
Game playing in immersive projection environments such as caves and
domes is assumed to offer an enhanced experience but there is little
quantitative research that measures this. This paper reports on a
study of user performance statistics while playing a computer game
projected onto a planetarium dome and compares these with similar
measurements taken in a conventional projected flat screen environment.
A survey of users subjective impressions of immersion was also taken
and used to compare these display modes. Analysis of users in each
mode revealed differences in user experience and some aspects of
performance. It was confirmed that dome projection enhanced the players
sense of immersion when compared with flat projection. Navigation
speed was found to decline in the dome while other performance metrics
showed no significant difference between the environments.","Measuring Game-Play Performance and Perceived Immersion in a Domed
Planetarium Projection Environment",0
92,"Video Game Console Audio: Evolution and Future Trends
Rapidly advancing technologies and the increasing role of computers
give the computer game boundless potential for the future. Among
the various game industries, the console game industry in particular
has attracted significant attention, bringing the importance of sound
and music to the forefront. Game music was traditionally used for
sound effects to prevent user boredom. As gaming developed, so did
audio, being utilized for numerous purposes. As gaming platforms
increased in power and complexity, audio, which was once limited
to simple beeps, started to play a larger role, becoming back ground
music (BGM) having quality at par with that of films. This paper
discusses the evolution of video game console audio specifications
and hardware, from simple 8-bit machines to future directions in
the development of audio generators for game sound & music.",Video Game Console Audio: Evolution and Future Trends,0
93,"Flow in games (and everything else)
A well-designed game transports its players to their personal Flow
Zones, delivering genuine feelings of pleasure and happiness.",Flow in games (and everything else),1
94,"Micro Robot Hockey Simulator - Game Engine Design
Like robot soccer, robot hockey is a game played between two teams
of robots. A robot hockey simulator has been created, for the purpose
of game strategy testing and result visualization. One major modification
in robot hockey is the addition of a puck-shooting mechanism to each
robot. As a result, the mechanics of interaction between the robots
and the hockey puck become a key design issue. This paper describes
the simulator design considerations for robotic hockey games. A potential
field-based strategy planner is implemented which is used to develop
strategies for moving the robots autonomously. The results of the
simulation study show both successful cooperation between robots
(on the strategy level), and realistic interaction between robots
and the puck.",Micro Robot Hockey Simulator - Game Engine Design,0
95,"On frame rate and player performance in first person shooter game
The rate at which frames are rendered in a computer game directly
impact player performance, influencing both the playability and enjoyability.
However, despite the importance of frame rate and the wide-spread
popularity of computer games, to the best of our knowledge, there
is little quantitative understanding of the effects of frame rate
on the player performance in computer games. This paper provides
a unique classification of actions in First Person Shooter (FPS)
games based on interaction requirements that provide a means to qualitatively
assess the impact of frame rates on player performance. This qualitative
assessment is supported by quantitative analysis from two large user
studies that measure the effects of frame rate on the fundamental
player actions in a First Person Shooter game. Nearly 100 users participated
in the two user study experiments, providing performance and perception
data over a range of frame rates commonly studied for video streaming
and inclusive of frame rates found in many computer game platforms.
In general, the analysis shows that actions that require precise,
rapid response, such as shooting, are greatly impacted by degradations
in frame rates, while actions with lower precision and response requirements,
such as moving, are more tolerant of low frame rates. These insights
into the effects of frame rates on player performance can guide players
in their choice for game settings and new hardware purchases, and
inform system designers in their development of new hardware.",On frame rate and player performance in first person shooter game,0
96,"ScriptEase: A generative/adaptive programming paradigm for game scripting
The traditional approach to implementing interactions between a player
character (PC) and objects in computer games is to write scripts
in a procedural scripting language. These scripts are usually so
complex that they must be written by a computer programmer rather
than by the author of the game story. This interruption in the game
story authoring process has two distinct disadvantages: it increases
the cost of game production and it introduces a disconnect between
the authors intentions and the interactions produced from the programmers
written scripts. We introduce a mechanism to solve these problems.
We show that game authors (non-programmers) can generate the necessary
scripts for implementing meaningful interactions between the PC and
game objects using a three-step process. In the first step, the author
uses a generative pattern (concept) to create a high-level description
of a commonly occurring game scenario. In the second step, the author
uses a standard set of adaptation operations to customize the high-level
description to the particular circumstances of the story that is
being told. In the third step, the author presses a button that automatically
generates scripting code from the adapted pattern. We describe the
results of three studies in which a combined total of 56 game story
authors used this three-step process to construct Neverwinter Nights
game stories, using a tool called ScriptEase. We believe that this
generative/adaptive process is the key to future game story scripting.
More generally, this article advocates the development of adaptive
programming as an alternative to current constructive programming
techniques, as well as the application of adaptive programming in
many domains.",ScriptEase: A generative/adaptive programming paradigm for game scripting,1
97,"Component Based Game Development A Solution to Escalating Costs
and Expanding Deadlines?
Expanding deadlines and escalating costs have notoriously plagued
the game industry. Although the majority of the game development
costs are spent on art and animation, significant cost reductions
and more importantly reductions in development time can be achieved
when developers use off the shelf components rather than develop
them from scratch. However, many game developers struggle with component
integration and managing the complexity of their architectures. This
paper gives an overview of developing games with components, presents
a reference architecture that outlines the relevant areas of reuse
and signifies some of the problems with developing components unique
to the domain of games.","Component Based Game Development A Solution to Escalating Costs
and Expanding Deadlines?",1
98,"Computer games as motivation for design patterns
We present a computer game case study that can be used to motivate
the need for design patterns. Design patterns are often misunderstood,
but good examples can motivate students to work at understanding
patterns. Computer games are used in many books and online resources
to teach programming concepts, but these examples are usually simplified
or non-object-oriented. We present a simple game that exhibits functionality
found in commercial games (animation, collision detection, etc.)
and show how it can be used as a case study for design patterns.
Specifically, we illustrate how the state, facade, observer, strategy,
and visitor patterns can replace procedural approaches for implenting
the logic and animation of game written in Java.",Computer games as motivation for design patterns,0
99,"Usability and Computer Games: Working Group Report
Computer games are intended to be fun to play. While they are also
interactive systems with sophisticated user interfaces, standard
concepts of usability do not necessarily apply to games. In this
workshop, we explored the relationship between usability and fun.
Our central conclusion was that applying standard usability design
guidelines, such as those proposed by Nielson [4], may improve or
reduce the fun of a game, but that for many standard usability guidelines,
there exist equivalent guidelines addressing fun in games.",Usability and Computer Games: Working Group Report,1
100,"Toward Quality-Driven Development of 3D Computer Games
The development of video games is a complex software engineering activity
bringing together large multidisciplinary teams under stringent constraints.
While much has been written about how to develop video games, there
has been as yet little attempt to view video game development from
a quality perspective, attempting to enumerate the quality attributes
that must be satisfied by game implementations, and to relate implementation
techniques to those quality attributes. In this paper, we discuss
desired quality attributes of 3D computer games, and we use the development
of our own Life is a Village game to illustrate architectural tactics
that help achieve these desired qualities.",Toward Quality-Driven Development of 3D Computer Games,1
101,"Consumer behavior in online game communities: A motivational factor
perspective
The concept of online communities has been used to improve customers
loyalty in recent years. While studies on transaction community such
as online auction have received more attention in the literature,
entertainment community such as online game has seldom been addressed.
This study applies the theory of reasoned action (TRA) and modifies
the technology acceptance model (TAM) to propose a research model.
An empirical study involving 356 subjects was conducted to test this
model. The results indicate that customer loyalty is influenced by
perceived enjoyment, social norms and preference. Perceived cohesion
has an indirect impact on loyalty. In addition, the finding s practical
implication suggests that community managers must overcome the problems
users encounter, including suffering from an unstable system, malicious
players and grief players.","Consumer behavior in online game communities: A motivational factor
perspective",0
102,"Pervasive Game Flow: Understanding player's enjoyment in pervasive
games
Player enjoyment is perhaps the most important issue in successful
game design, but so far it has not been addressed in the area of
pervasive games. Departing from the general gameflow model, this
article presents an initial outline for a new model of pervasive
player enjoyment, that is, the pervasive gameflow model, which is
described and discussed in terms of additions and elaborations to
the general gameflow model. It is intended to serve as a departure
point for further empirical studies on player enjoyment in pervasive
games.","Pervasive Game Flow: Understanding player's enjoyment in pervasive
games",0
103,"Playability heuristics for mobile multi-player games
Multi-player games are engaging because of social interaction and
competing with real players. Currently, many digital games are multi-player
or have multi-player features. When evaluating the playability of
multi-player games, we need to consider player-to-player interaction.
In this paper, we introduce and describe playability heuristics for
mobile multi-player games that complement the playability heuristic
model that we have presented earlier. Multi-player heuristics have
been developed by identifying playability problems in game evaluations
and comparing these findings to game design guidelines and other
studies found in the literature. The results indicate that the presented
multi-player heuristics correspond to issues that are addressed to
be important in multi-player games.",Playability heuristics for mobile multi-player games,1
104,"Generation and control of game virtual environment
In this paper, we present a framework for the generation and control
of an Internet-based 3-dimensional game virtual environment that
allows a character to navigate through the environment. Our framework
includes 3-dimensional terrain mesh data processing, a map editor,
scene processing, collision processing, and walkthrough control.
We also define an environment-specific semantic information editor,
which can be applied using specific location obtained from the real
world. Users can insert text information related to the characters
real position in the real world during navigation in the game virtual
environment.",Generation and control of game virtual environment,1
105,"Games: Once More, with Feeling
Achieving increased player engagement involves adding deep emotional
experiences to videogames. Games and simulations are already capable
of gripping a player's emotions. From the earliest days of flight
simulators, for example, professional pilots have frequently reported
feeling stressed during simulated emergencies in a training simulator.
Similarly, gamers say that they feel tension during intense moments
in a first-person shooter. Games also seem effective at creating
feelings of triumph and at startling or exciting players.","Games: Once More, with Feeling",1
106,"Mapping the Mental Space of Game Genres
The gaming community currently uses an informal classification of
games into genres such as first-person shooters, real-time strategy
games, etc. While this classification is generally accepted, producing
a more formal taxonomy of game types directly from data has several
scholarly and commercial advantages. These include providing a basis
for analysis of age- and gender-related data, statistically meaningful
grouping in critical literature, improved game recommendations on
retail websites, and better evaluation of a game's market potential
before production. Mapping the mental space of game genres is challenging,
both because it involves subjective evaluations and because there
are many axes on which games can vary. We collected pairwise similarity
metrics of games from game players through an online survey to build
a large similarity matrix that is the projection of a high-dimensional
space representing the unknown and hypothetical true mental space
of game genres. We then applied previous techniques in manifold learning
and psychology to the problem of reconstructing the most significant
dimensions into maps that can be meaningfully interpreted. We believe
this is the first application of these techniques to games and one
of the first to work with conceptual (instead of physical) data.
The resulting maps arrange related games into spontaneously arising
clusters that sometimes contradict current marketing genres. We analyze
several of these clusters and propose both interpretations for these
``true genres'' as well as axes that game players appear to use in
discriminating between them. Our initial results indicate that game
players tend to primarily distinguish games not by traditional genres
but instead by aesthetic and mechanics, which is closely related
to how developers construct games.",Mapping the Mental Space of Game Genres,0
107,"Business models and operational issues in the Chinese online game
industry
The rapid growth of Internet usage has enabled many new online communities
to develop. A particularly interesting phenomenon that has arisen
through Internet communities is the virtual world (VW) style of online
game. This paper identifies the challenges that developers of VWs
will face in their efforts to find viable business models. This is
a single case study of China as an exploratory project to determine
the issues surrounding business models for virtual world developers
and users. The paper discusses the feedback effects between broadband
adoption and online games as well as issues such as culture, history,
Waigua, private servers, virtual property trade, developer control,
governance, and regulation. In spite of the profitability of major
Chinese VW operators, close observation of the Chinese case suggests
that even the most successful VW operators are still in the early
stages of their business model development.","Business models and operational issues in the Chinese online game
industry",0
108,"A documental approach to adventure game development
In this paper, we propose a documental approach to the development
of graphical adventure videogames. This approach is oriented to the
production and maintenance of adventure videogames using the game s
storyboard as the key development element. The videogame storyboard
is marked up with a suitable domain-specific descriptive markup language,
from which the different art assets that are needed are referred
to, and then the final executable videogame itself is automatically
produced by processing the marked storyboard with a suitable processor
for such a language. This document-oriented approach opens new authoring
possibilities in videogame development and allows a rational collaboration
between the different communities that participate in the development
process: game writers, artists, and programmers. We have implemented
the approach in the context of the <e-Game > project, by defining
a suitable markup language for the storyboards (the <e-Game > language),
and by building a suitable processor for this language (the <e-Game
> engine).",A documental approach to adventure game development,1
109,"Towards Automated Game Design
Game generation systems perform automated, intelligent design of games
(i.e. videogames, boardgames), reasoning about both the abstract
rule system of the game and the visual realization of these rules.
Although, as an instance of the problem of creative design, game
generation shares some common research themes with other creative
AI systems such as story and art generators, game generation extends
such work by having to reason about dynamic, playable artifacts.
Like AI work on creativity in other domains, work on game generation
sheds light on the human game design process, offering opportunities
to make explicit the tacit knowledge involved in game design and
test game design theories. Finally, game generation enables new game
genres which are radically customized to specific players or situations;
notable examples are cell phone games customized for particular users
and newsgames providing commentary on current events. We describe
an approach to formalizing game mechanics and generating games using
those mechanics, using WordNet and ConceptNet to assist in performing
common-sense reasoning about game verbs and nouns. Finally, we demonstrate
and describe in detail a prototype that designs micro-games in the
style of Nintendo s WarioWare series.",Towards Automated Game Design,0
110,"Player Immersion in the Computer Game Narrative
The main characteristics of the computer game narrative are interactive
and nonlinear, so this study proposes a questionnaire aim at studying
player immersion in the computer game narrative. To evaluate the
questionnaire, a survey was conducted on the Internet. After factor
analysis and reliability test, an instrument for measuring player
immersion were obtained. This instrument not only can be applied
to the computer game narrative, it also ca be used to measure user
experience in story-oriented virtual reality.",Player Immersion in the Computer Game Narrative,0
111,"Design and evaluation of a tactile memory game for visually impaired
children
Visually impaired people have a lack of proper user interfaces to
allow them to easily make use of modern technology. This problem
may be solved with multimodal user interfaces that should be designed
taking into account the type and degree of disability. The purpose
of the study presented in this article was to create usable games
for visually impaired children making use of low-cost vibro-tactile
devices in multimodal applications. A tactile memory game using multimodal
navigation support with high-contrast visual feedback and audio cues
was implemented. The game was designed to be played with a tactile
gamepad. Different vibrations were to be remembered instead of sounds
or embossed pictures that are common in memory games for blind children.
The usability and playability of the game was tested with a group
of seven 12 13-year-old visually impaired children. The results showed
that the game design was successful and a tactile gamepad was usable.
The game got a positive response from the focus group.","Design and evaluation of a tactile memory game for visually impaired
children",0
112,"Toward mobile entertainment: A paradigm for narrative-based audio
only games
The widespread use of sophisticated mobile computing devices has set
the stage for a renaissance in audio only entertainment. Traditional
visual games are already used widely in cellular phones and similar
devices. A significant limitation is the small display size. In contrast,
audio only games on suitable mobile hardware need not degrade due
to the smaller form factor. This makes audio only games an attractive
alternative to visual games. We describe a framework for authoring
interactive narrative-based audio only games set in 3D virtual environments.
Despite the novelty in audio only gaming, our approach builds on
a foundation of several years of research into audio only applications
for sight impaired users, augmented reality systems and human computer
interaction studies. In comparison to attempts to provide a realistic
user interface, we argue a simple interface enhances both immersion
and entertainment value, serendipitously making audio only games
practical for mobile computing. Novel features of our system include
real-time gameplay and multi-player support. We also describe our
software architecture, the current implementation of which uses low-cost
existing PC-based hardware and software. In addition, we describe
our first game, Dragon s Roar.","Toward mobile entertainment: A paradigm for narrative-based audio
only games",1
113,"Video games: Issues and problems
Video games have become part of young adult life since 30 years ago.
It affects their daily activities and the way they think and behave.
Study and intensive review on the issues and problems of the influence
of video games are important to ensure the games have some kind of
limitation and boundary. There are two main issues have been discussed
which are social and technological design. In addition to that, the
relationship between video games and education, current industry
market, and technology has also been considered. There are three
main people can control the problems, they are parent, government
and video games developer.",Video games: Issues and problems,0
114,"Dynamic programming and board games: A survey
In several of the earliest papers on dynamic programming (DP), reference
was made to the possibility that the DP approach might be used to
advise players on the optimal strategy for board games such as chess.
Since these papers in the 1950s, there have been many attempts to
develop such strategies, drawing on ideas from DP and other branches
of mathematics. This paper presents a survey of those where a dynamic
programming approach has been useful, or where such a formulation
of the problem will allow further insight into the optimal mode of
play.",Dynamic programming and board games: A survey,0
115,"Key factors of heuristic evaluation for game design: Towards massively
multi-player online role-playing game
The computer game industry has become the fastest growing field of
the entertainment industry. However, only a very small number of
computer game products overcome the costs of production and generate
earnings. According to traditional marketing wisdom, customers preferences
must be analyzed correctly to create successful products, and in
the gaming industry, such information must be considered during the
design process. This research aims to explore key factors of heuristic
evaluation for game design. A review of literature pertaining to
computer games and HCI was conducted along with an empirical research
of a Massively Multi-player Online Role-playing Game (MMORPG). We
identified 18 usability issues in MMORPG and presented a recommendation
relevant to the issues. Empirical data were applied to a new heuristic
evaluation framework. We determined the relationship between key
factors and four game categories, such as game interface, game play,
game narrative, and game mechanics. Moreover, the results presented
54 key factors for a new heuristic evaluation framework for game
design. The conclusion presents key implications of our research
in a game design context, particularly related to early design processes.","Key factors of heuristic evaluation for game design: Towards massively
multi-player online role-playing game",0
116,"Making Sense of Stories: the development of a new mobile computer
game
This paper analyzes the retrospective stories of a four person team
responsible for developing a new computer game for mobile phones.
Our theorizing is based on an in-depth, two year, case study. The
research contribution this paper makes is threefold. First, it outlines
and discusses some of the analytical issues at stake in the adoption
of a storytelling approach to understanding IS developments. Second,
we show how individuals' work stories are tools by which they make
sense of organizational events and read meaning into their working
lives and relationships with others. Third, we illustrate the roles
that individuals' work stories play in bolstering their self-esteem
by attributing positive outcomes to the self and negative outcomes
to external forces, and in their strategic presentation of the self
to others. Finally we outline some implications for managing the
mobile game development process","Making Sense of Stories: the development of a new mobile computer
game",0
117,"Using Games in Software Engineering Education to Teach Risk Management
An innovative board game was developed at Carnegie Mellon University's
Master in Software Engineering Program to teach risk management concepts.
Piloted in two separate courses dealing with software project risk
management, the goal of the game was to enhance practical learning
and decision making through simulating a software development project.
This activity was then compared to others used in the class, specifically
lectures and case discussions, to assess its effectiveness in meeting
learning objectives. The results clearly demonstrate the advantages
of using a game method in teaching software engineering concepts.
Findings will discuss how the game compares to other teaching activities
in the classroom in terms of conveying relevant information, help
in concept understanding and learning enjoyment.",Using Games in Software Engineering Education to Teach Risk Management,0
118,"GUIDE: Games with UML for interactive design exploration
In this paper we present our design tool GUIDE, which allows the user
to explore a design in UML interactively by playing a game. The game
incorporates both the design model and a specification of what it
means for the design to be correct. The central idea of this approach
is that the designer can increment the game during a play and gradually
add more detail to it. Specification and design are refined by repeated
plays of the game. The designer stops playing when design and specification
are detailed enough for his purpose and match each other. The interactive
game approach helps to cope with incompleteness and informal definition
of UML models, which make strictly formal verification techniques
difficult. The designer may resolve these problems when they arise
during a play or let the GUIDE tool determine how the play should
proceed. We discuss the potential impact of GUIDE and tools like
it on software development.",GUIDE: Games with UML for interactive design exploration,0
119,"Evolutions in Gaming
Game consoles are encroaching on PC territory, says Mark Claypool,
associate professor in the computer science department at Wooster
Polytechnic Institute. ""Now they have hard drives, main memory, a
programmable processor, a big graphics card, and networking."" While
game consoles aren't upgraded as often as PCs are-the last upgrades
were four and five years ago-the most recent upgrades share the common
denominator of ""more"": more power, better graphics, and more connections
with other players. Last year's releases from the big three in gaming
consoles-Microsoft's Xbox 360, Nintendo's Wii, and Sony's PlayStation
3-represent an evolution in both technology and purpose, expanding
game play and its applications.",Evolutions in Gaming,0
120,"Re-using digital narrative content in interactive games
This paper presents a model, called Scene-Driver, for the re-use of
film and television material. We begin by exploring general issues
surrounding the ways in which content can be sub-divided into meaningful
units for re-use and how criteria might then be applied to the selection
and ordering of these units. We also identify and discuss the different
means by which a user might interact with the content to create novel
and engaging experiences. The Scene-Driver model has been instantiated
using content from an animated children's television series called
Tiny Planets, which is aimed at children of 5 7-year old. This type
of material, being story-based itself, lends itself particularly
well to the application of narrative constraints to scene reordering,
to provide coherence to the experience of interacting with the content.
We propose an interactive narrative-driven game architecture, in
which a user generates novel narratives from existing content by
placing domino like tiles. These tiles act as glue between scenes
and each tile choice dictates certain properties of the next scene
to be shown within a game. There are three different game-types,
based on three different ways in which tiles can be matched to scenes.
We introduce algorithms for generating legal tile-sets for each of
these three game-types, which can be extended to include narrative
constraints. This ensures that all novel orderings adhere to a minimum
narrative plan, which has been identified based on analysis of the
Tiny Planets series and on narrative theories. We also suggest ways
in which basic narratives can be enhanced by the inclusion of directorial
techniques and by the use of more complex plot structures. In our
evaluation studies with children in the target age-range, our game
compared favourably with other games that the children enjoyed playing.",Re-using digital narrative content in interactive games,0
121,"Experimental study of an online game over wireless networks
Online games usually require the delivery of realtime multimedia contents
over networks. While online games have become increasingly popular
over the Internet, it is still challenging to build online games
over wireless networks, where link quality changes from time to time
and link capacity is usually much smaller compared to wired networks.
Packet losses and large delay of wireless networks may make online
gaming an unpleasant experience, especially when a large amount of
multimedia traffic is exchanged between players. In this paper, we
implement a two-player competitive online game over wireless LAN
and test its performance. To reduce the impact of message delay,
we introduce a design pattern to deduce the traffic of multimedia
contents by coding game context at the application layer instead
of transmitting actual multimedia data. Experimental results demonstrate
that even with a high bit error rate, the application-layer quality
deterioration is negligible for most game players.",Experimental study of an online game over wireless networks,0
122,"HCI issues in computer games
No abstract is available for this article (Editorial): HCI issues
in computer games",HCI issues in computer games,0
123,"Object-Orientation Is Evil to Mobile Game: Experience from Industrial
Mobile RPGs
Mobile gaming is playing an important role in the entertainment industry.
Good performance is a critical requirement for mobile games in order
to achieve acceptable running speed although mobile devices are limited
by scarce resources. Object-oriented programming is the prevalent
programming paradigm and this is true for mobile game development
as well. As the origin of object-orientation (OO) is not targeting
the embedded software domain, there is suspicion as to OO s usability
for embedded software, especially with respect to mobile games. Questions
arise like how OO and to what degree OO will affect the performance,
executable file size, and how optimization strategies can improve
the qualities of mobile game software. In this paper we investigate
these questions within the mobile Role-Playing-Game (RPG) domain
using five industrial mobile games developed with OO. We re-implemented
these five RPGs with a structural programming style, by reducing
the inheritance relationships, removing excessive classes and interfaces.
Some additional optimizations are also applied during the re-implementation,
such as the tackling of performance bottleneck methods, using more
efficient algorithms. New games after optimizations run on average
almost 25% faster than the corresponding original games, with a maximum
of 34.62% improvement; the memory usage is decreased by more than
10% on average and 17.56% as a maximum; we also achieved a 59% code
reduction and a 71% Jar file decrease after optimization. Therefore
if developers are aiming for mobile game performance, we conclude
that they should use as few OO features as possible. Structural programming
can be a very competitive alternative.","Object-Orientation Is Evil to Mobile Game: Experience from Industrial
Mobile RPGs",1
124,"Mobile Game Development: Object-Orientation or Not
Mobile games are one of the primary entertainment applications at
present. Limited by scarce resources, such as memory, CPU, input
and output, etc, mobile game development is more difficult than desktop
application development, with performance as one of the top critical
requirements. As object-oriented technology is the prevalent programming
paradigm, most of the current mobile games are developed with object-orientation
(OO) technologies. Intuitively OO is not a perfect paradigm for embedded
software. Questions remain such as how OO and to what degree OO will
affect the performance, executable file size, and how optimization
strategies can improve the qualities of mobile game software. These
questions are investigated in this paper within the mobile Role-Playing-Game
(RPG) domain using five industrial mobile games developed with OO.
We analyzed them and found excessive usage of OO features used for
the development of mobile device applications (but normal for usual
desktop applications). We then apply some optimization strategies
along the way of structural programming. The experiment shows that
the total jar file size of these five optimized games decreases 71
% the lines of codes decreases 59%, and the loading time of each
optimized game decreases 22.73%, 34.62% 25.79% 24.65% and 16.70%
respectively. Therefore, we conclude from our experiments that 00
should be used with great care in the development of mobile games,
and that structural programming can be a very competitive alternative.",Mobile Game Development: Object-Orientation or Not,1
125,"The Unlikeability of a Cuddly Toy Interface: An Experimental Study
of Preschoolers Likeability and Usability of a 3D Game Played with
a Cuddly Toy Versus a Keyboard
We report on a comparative study of the likeability and usability
of a cuddly toy interface versus a keyboard interface. We put 35
preschoolers to the test and asked them to play a 3D game via a keyboard
and via a cuddly toy interface. Afterwards the usability (user-friendliness)
and the likeability (joy-ofuse) of both interfaces were assessed.
Our results indicate that the cuddly toy interface was neither more
likeable nor more usable than the keyboard interface. Based on additional
qualitative data, we argument that the causes might be fatigue, a
lack of meaningful use of gestures, and the occurrence of satisficing.","The Unlikeability of a Cuddly Toy Interface: An Experimental Study
of Preschoolers Likeability and Usability of a 3D Game Played with
a Cuddly Toy Versus a Keyboard",1
126,"Massively multiplayer online role-playing games: the past, present,
and future
Massively multiplayer online role-playing games (MMORPGs) are emerging
in the computer game industry as a very popular genre. These games
have existed since the late 1990s, but in the last few years the
market has become increasingly strong. This relatively new genre
is attracting a widespread audience, bringing together those who
previously enjoyed both pen and paper and computer role-playing games,
as well as those who enjoy socializing with other players in a virtual
environment. Game developers see MMORPGs as a potentially profitable
business due to its widespread appeal, but the reality is that only
a small percentage of MMORPGs that are released become a success
[Kosak 2006]. This article attempts to determine the many aspects
that make a successful MMORPG; it also attempts to ascertain what
new and innovative features are expected by the users from the next
generation of MMORPGs. This is achieved by looking at and discussing
past literature and surveying the MMORPG community's perception of
previous and current MMORPGs, as well as their expectations of the
next generation. An online survey attracted 122 participants to provide
their perceptions of current and past MMORPGs. This article determines
and outlines the respondents' preferences in the MMORPG genre, discussing
what implications these could have on its future. The survey also
gave insight into the respondents' expectations of the future of
MMORPGs. We conclude this article with a discussion of aspects of
current MMORPGs that the participants would like improved, as well
as new features they would like incorporated into the next generation
of games.","Massively multiplayer online role-playing games: the past, present,
and future",0
127,"Experiences with Mobile Games Product Line Development at Meantime
Small and medium enterprises (SME) represent a significant percentage
of software companies. Although there are some experience reports
on using software product line (SPL) techniques in SMEs, there is
a lack of such reports on the mobile games domain. This domain is
attractive both economically and technically, with a significant
amount of variability, thus suggesting the use of a SPL approach.
Accordingly, we conduct an exploratory study in a company in this
domain, eliciting the main challenges, determining if and how SPL
approaches help to address them, and raising hypotheses to guide
future studies.",Experiences with Mobile Games Product Line Development at Meantime,1
128,"The case for research in game engine architecture
This paper is a call for research in the field of game engine architecture
and design, a more comprehensive and thorough understanding of which
we consider to be essential for its development. We present a number
of key aspects that may help to define the problem space and provide
a catalogue of questions that we believe identify areas of interest
for future investigation.",The case for research in game engine architecture,0
129,"Software Architecture in Game Development
Summary form only given. Video games have now existed in various forms
for over 30 years, and have evolved from humble beginnings into remarkably
complex software projects. The ever present emphasis on an immersive
audio/visual experience has put game developers in the position of
being on the bleeding edge of exploring the performance of modern
consumer hardware. This talk will discuss the elements that make
up a contemporary video game, the software processes that are involved
in development, key challenges, and look at some important design
patterns that form the architectural basis.",Software Architecture in Game Development,0
130,"Requirements in Conflict: Player vs. Designer vs. Cheater
There are significant interactions between video game stakeholder
emotional requirements and security requirements. Counter-intuitively,
some traditional security requirements are not necessarily met by
the game implementation some forms of security breaches are condoned
by the stakeholders (if not actually demanded by them) and the requirements
engineering process must support these contradictions. We present
an overview of security requirements for video games and show how
stakeholder diversity introduces significant complexities to the
requirements negotiation process. Our analysis of certain security
threats, and their emotional motivations, shows that these motivations
form an important element of the emotional requirements and that
significant context is necessary for properly capturing the emotional
requirements related to security. Finally, we show how emotional
requirements can be used to guide security goal development for this
domain and propose the use of in-game justice systems to allow players
to address security violations in realtime.",Requirements in Conflict: Player vs. Designer vs. Cheater,0
131,"Evolution of 3D mobile games development
3D computer graphics have been an important feature in games development
since it was first introduced in the early 80s and there is no doubt
that 3D based content is often viewed as more attractive in games
than the more abstract 2D graphics. Many games publishers are keen
to leverage their success in the console market into the mobile phone
platform. However, the resource constraints of mobile phones and
the fragmented nature of the environment present considerable challenges
for games developers. In this paper we consider some of the current
constraints together with current and, probable, future developments
both in the software and hardware of mobile phones. As part of this
process we benchmark some of the latest and most prevalent software
and hardware devices to ascertain both the quality of the graphics
produced and the effects upon battery life. Whilst our test results
highlight that the current market does indeed present challenges,
our research into the future developments highlights the fact we
are approaching greater standardization, which will be an important
factor for the successful development of 3D mobile games.",Evolution of 3D mobile games development,1
132,"Using Data Mining for Dynamic Level Design in Games
Fun is the most important determinant of whether a game will be
successful. Fun can come from challenges and goals, such as victory
in a scenario, the accumulation of money, or the right to move to
the next level. A game that provides a satisfying level of challenge
is said to be balanced. Some researchers use artificial intelligence
(AI) on the dynamic game balancing. They use reinforcement learning
and focuses on the non-player characters. However, this is not suitable
for all game genres such as a game requiring dynamic terrains. We
propose to adjust the difficulty of a game level by mining and applying
data about the sequential patterns of past player behavior. We compare
the performance of the proposed approach on a maze game against approaches
using other types of game AI. Positive feedback and these comparisons
show that the proposed approach makes the game both more interesting
and more balanced.",Using Data Mining for Dynamic Level Design in Games,0
133,"Architecture patterns for mobile games product lines
Product line software engineering (PLSE) is a promising method for
software reuse. For the key of success, a reusable and adaptable
architecture design is necessary. In domain of mobile games product
lines, architectures have some common structures because of circumstance
properties of the domain and business constraints. In this paper,
we classify them as architecture patterns. By doing this, we can
expect increasing portability, reusability, adaptability, maintainability,
and eventually productivity and improving quality.",Architecture patterns for mobile games product lines,1
134,"PlayMancer: A Serious Gaming 3D Environment
Serious games are computer games used as educational technology or
as a vehicle for presenting or promoting a point of view. Serious
games are intended to provide an engaging, self-reinforcing context
in which to motivate and educate the players towards non-game events
or processes, including business operations, training, marketing
and advertisement. The potential of games for entertainment and learning
has been demonstrated thoroughly from research and clearly in the
market place. Unfortunately, the investments committed to entertainment
dwarfs that which is committed for more serious purposes. Furthermore,
game development has become more complex, expensive, and burdened
with a long development cycle. In this paper we introduce PlayMancer,
a work in progress that aims to overcome such barriers by augmenting
existing 3D gaming engines with new possibilities and thusly creating
a novel development framework. In section I of this paper we briefly
survey the serious games market. In section II we introduce the PlayMancer
project and its objectives, whereas in section III we present the
platform architecture. Section VI describes an application scenario
where a PlayMancer-based game is being used as additional therapeutic
tool to treat chronic mental disorders, such as eating disorders
and behavioral addiction.",PlayMancer: A Serious Gaming 3D Environment,1
135,"Toward an understanding of flow in video games
In the domain of computer games, research into the interaction between
player and game has centred on 'enjoyment', often drawing in particular
on optimal experience research and Csikszentmihalyi's 'Flow theory'.
Flow is a well-established construct for examining experience in
any setting and its application to game-play is intuitive. Nevertheless,
it's not immediately obvious how to translate between the flow construct
and an operative description of game-play. Previous research has
attempted this translation through analogy. In this article we propose
a practical, integrated approach for analysis of the mechanics and
aesthetics of game-play, which helps develop deeper insights into
the capacity for flow within games. The relationship between player
and game, characterized by learning and enjoyment, is central to
our analysis. We begin by framing that relationship within Cowley's
user-system-experience (USE) model, and expand this into an information
systems framework, which enables a practical mapping of flow onto
game-play. We believe this approach enhances our understanding of
a player's interaction with a game and provides useful insights for
games' researchers seeking to devise mechanisms to adapt game-play
to individual players.",Toward an understanding of flow in video games,0
136,"Playing different games on different phones: an empirical study on
mobile gaming
With the growing popularity of mobile phone gaming, design issues
with mobile phone games have become more important. Given the complexity
of designing games for mobile phones, game developers must understand
how mobile phone users gaming experiences are like when using different
types of phones. This paper examines users gaming experiences in
playing three types of games on three different types of phones.
It is found that users have different preferences when playing different
games on certain phones. Some games are more suitable to be played
on mobile phone than others. Easy control and fewer levels of difficulties
are the two main issues for consideration in designing mobile phone
games. It is recommended that game designers design specific types
of games for different mobile phone

interfaces. Mobile phone manufacturers need to consider gamers requirements
for the type of games they intend to include in the mobile phone.","Playing different games on different phones: an empirical study on
mobile gaming",1
137,"Non-visual game design and training in gameplay skill acquisition
A puzzle game case study
This paper reports the results of a study on the design and evaluation
of the game and techniques which allow puzzles to be played in the
absence of visual feedback. We have demonstrated that a camera-mouse
can be used successfully for blind navigation and target location
acquisition within a game field. To gradually teach the players the
sequential learning method was applied. Blind exploration of the
gamespace was augmented with sticky labels and overview sound cues,
verbal and non-verbal, which can significantly reduce the cognitive
load and facilitate mental matching and integration. The full-sticky
labels technique does not require fine motor skills and allows a
user to gain control over the game with a minimum level of skills.
With the vertical sticky labels technique training was focused on
the development of accurate head movements only on a horizontal plane.
With practice, the players can use the non-sticky labels technique.
After 240 trials (3 4 h), the cumulative experience of the blindfolded
players was increased 22.5 27 times compared to the initial 10 trials.","Non-visual game design and training in gameplay skill acquisition
A puzzle game case study",0
138,"Non-visual Gameplay: Making Board Games Easy and Fun
In this paper we report the results of a study on an evaluation of
a game and techniques which allow playing board games in the total
absence of visual feedback. We have demonstrated that a camera mouse
can be used for blind navigation within a game field. Snapping a
position of the virtual pointer to the regions of interest as well
as audio-haptic complementary mapping significantly reduce the cognitive
load and facilitate mental matching and integration of overview sound
sequences.",Non-visual Gameplay: Making Board Games Easy and Fun,1
139,"Build your own games
Software is allowing children to develop their own animations and
games by building blocks of code.",Build your own games,0
140,"Modelling Video Games Landscapes by Means of Genetic Terrain Programming
- A New Approach for Improving Users Experience
Terrain generation algorithms can provide a realistic scenario for
video game experience and can help keep users interested in playing
by providing new landscapes each time they play. Nowadays there are
a wide range of techniques for terrain generation, but all of them
are focused on providing realistic terrains. This paper proposes
a new technique, Genetic Terrain Programming, based on evolutionary
design with GP to allow game designers to evolve terrains according
to their aesthetic feelings or desired features. The developed application
produces Terrains Programs that will always generate different terrains,
but consistently with the same features (e.g. valleys, lakes).","Modelling Video Games Landscapes by Means of Genetic Terrain Programming
- A New Approach for Improving Users Experience",0
141,"Ucigame, a java library for games
Ucigame (pronounced OO-see-GAH-me) is a Java package that supports
the programming of 2D sprite-based computer games. Designed for novice
programmers, it enables students in an introductory class to write
computer games that have animated sprites, music and sound effects,
and event-driven keyboard and mouse handling. Ucigame has also been
used successfully in a senior-level class for experienced programmers.","Ucigame, a java library for games",1
142,"An architecture to easily produce adventure and movie games for the
mobile scenario
Simple and easy-to-play casual games are flooding the mobile gaming
market and are best-sellers on the mobile game charts of several
cellphone network operators. Most of the titles are mobile versions
of videogames developed in the '80s and '90s, which were also very
simple and easy-to-play. In this article we focus on adventure and
movie games, a genre simple, easy-to-play, and very popular in the
past. We propose a software architecture to easily produce full-motion
adventure games for the mobile scenario, and thus potentially transform
any modern cellphone into an adventure game console. The games are
portable and protected against un-authorized usage. The feasibility
of our approach is shown through a prototype player and an evaluation
that shows the suitability of the proposed approach for the mobile
scenario. The simplicity of our approach along with the ubiquity
of modern cell-phones may bring new life to adventure games, which
can also become an exciting genre for the current mobile gaming scenario.","An architecture to easily produce adventure and movie games for the
mobile scenario",1
143,"A type assignment system for game semantics
We present a type assignment system that provides a finitary interpretation
of lambda terms in a game semantics model. Traditionally, type assignment
systems describe the semantic interpretation of terms in domain-theoretic
models. Quite surprisingly, the type assignment system presented
in this paper is very similar to the traditional ones, the main difference
being the omission of the subtyping rules.",A type assignment system for game semantics,0
144,"A Reusable Eduventure Game Framework
Adventure games for educational purpose, which is termed of eduventure,
show many advantages. In this paper, a group of core concepts which
is essential to eduventure game design is found. In order to prevent
eduventure game designer from continually rediscovering of these
core elements, we clarify the functionalities of these core concepts
and form them into a collaborated conceptual framework. We also show
how the Conceptual Eduventure Framework can be reused in eduventure
game design and how it can serve as a tool which can adjust the balance
between instruction and entertainment. Furthermore, we implement
the Conceptual Eduventure Framework in TorqueScript so that it becomes
a library of building blocks which can be reused in eduventure game
development based on Torque Game Engine. As evaluation and application,
an eduventure game project is built based on the TorqueScript Eduventure
Framework which can be applied in freshman training.",A Reusable Eduventure Game Framework,0
145,"The Magnus-Derek game
We provide a new adaptive strategy for the maximizer in the Magnus-Derek
game on the n-cycle. We show that this new strategy succeeds within
O(nlogn) rounds, and thus improves on a predecessor result that uses
a quadratic number of rounds.",The Magnus-Derek game,0
146,"A hybrid architecture for massively multiplayer online games
Many massively multiplayer online games use client-server architectures
that have enormous server-side bandwidth requirements. Peer-to-peer
game architectures provide better scaling, but open the game to additional
cheating, since players are responsible for distributing events and
storing state. We have developed a hybrid game architecture that
maintains centralized control of state, while significantly reducing
server bandwidth. The architecture uses a combination of client-server
and peer-to-peer event distribution, so that only critical events
are processed by the server. In addition, the architecture uses measurements
and monitoring to ensure that players are capable of handling event
distribution and are indeed providing this service. By lowering the
bandwidth needed to host a game, while also providing a simple way
to prevent cheating, our hybrid architecture allows game companies
to support more concurrent players while still providing a controlled
game experience. We deploy a game using the hybrid architecture on
PlanetLab and use a measurement study to demonstrate its advantages
over a client-server architecture.",A hybrid architecture for massively multiplayer online games,0
147,"Investigating the Applicability of Usability and Playability Heuristics
for Evaluation of Pervasive Games
This paper investigates to what extent traditional methods for usability
evaluation can reveal problems and issues in pervasive games. The
questions of importance for the study could be summarized as: what
kind of problems in pervasive games can usability evaluation methods
reveal? Which of these problems are general/traditional usability
problems, which problems can be related to general problems in computer
games and most importantly: which problems are unique for the genre
of pervasive games? In order to approach these questions, a pervasive
game prototype called ""SupaFly"", have been evaluated with 58 participants
and by use of three standard usability evaluation methods; qualitative
questionnaires, system logs and focus group interviews. The problems
identified in the evaluation are analyzed and compared to categories
and heuristics of previously known usability problems and problems
identified in computer games (playability problems) in order to outline
the problems unique for pervasive games. Of a total number of 16
issues, six issues were at least partly not covered by traditional
usability and playability. Of these six issues, three problematic
issues were completely unique for pervasive games: the connection
between the platforms of the game (unclear relation between game
platforms), the role and meaning of player positioning (unclear role
of player positioning (location)) and the level of social interaction
(levels of interaction not aligned with social needs).","Investigating the Applicability of Usability and Playability Heuristics
for Evaluation of Pervasive Games",1
148,"Measuring and defining the experience of immersion in games
Despite the word's common usage by gamers and reviewers alike, it
is still not clear what immersion means. This paper explores immersion
further by investigating whether immersion can be defined quantitatively,
describing three experiments in total. The first experiment investigated
participants abilities to switch from an immersive to a non-immersive
task. The second experiment investigated whether there were changes
in participants eye movements during an immersive task. The third
experiment investigated the effect of an externally imposed pace
of interaction on immersion and affective measures (state anxiety,
positive affect, negative affect). Overall the findings suggest that
immersion can be measured subjectively (through questionnaires) as
well as objectively (task completion time, eye movements). Furthermore,
immersion is not only viewed as a positive experience: negative emotions
and uneasiness (i.e. anxiety) also run high.",Measuring and defining the experience of immersion in games,0
149,"The Platform of Quick Development of Mobile 3D Game
The platform of quick development of mobile 3D game can be used to
reduce the mobile 3d phone games' develop-cycle. With this platform,
the developers can break out of the complexity of programming. Thus
more efforts will be putted into enriching contents of the game itself.
The core of the platform of quick development of mobile 3D game is
the ability of configuration, which can be divided into the following
parts. The first part is the implementation of a 3D mobile game template
in the environment of Symbian OS and Nokia Series 60 platform. The
example game is a first-person shooting (FPS) game using OpenGL ES.
The second part is to analyze the whole structure of the game systems,
and to extract the parameters of the game which can be customized.
According to the extracted part, we make the customized XML documents.
Finally we use custom tools to customize the game. The tools modify
the XML data following the programmer's intention and use the XML
data to rewrite the gameÂ¿s source codes and to build a new version
of the game.",The Platform of Quick Development of Mobile 3D Game,1
150,"Towards an AJAX-based game engine
In recent years, browser games have considerably improved so that
regarding the number of players they nowadays can compete with MMOGs.
At the same time, they have abandoned their own principles by increasingly
relying on proprietary technology. In this paper, we propose the
concept of a 2D single player game engine that is based on new Web
2.0 standards (especially AJAX) which promise to alleviate some of
the problems that caused the mentioned technological shift. No additional
platform besides a standard browser will be needed to run instantiated
games, since the engine will be based on JavaScript. Game content
will be loaded on-demand using an AJAX-compliant update mechanism.",Towards an AJAX-based game engine,0
151,"Critical skills for game developers: an analysis of skills sought
by industry
With electronic gaming on the rise, several major universities involved
in game development research have implemented curricula specifically
for future game developers. Gaming curricula are now being offered
in smaller universities, colleges, and other educational institutions,
with other departments wondering if they should follow suit and what
content should be covered. For this quantitative research, the author
performed a content analysis on posted job advertisements for game
developer

positions, to determine qualities the gaming industry desires when
seeking game developer employees,. A categorization of qualities
was performed after reviewing each job ad and five categories for
qualifications were developed: Experience, Education, Interpersonal
& Personal Abilities, Technical Skills, and Supporting Knowledge
and a frequency distribution of the qualities in each ad was performed.
The results show that there are education and experience levels,
skills, abilities, and knowledge

that are clearly sought by industry and certain qualities are sought
with more frequency than others.","Critical skills for game developers: an analysis of skills sought
by industry",0
152,"A Case Study in Software Product Lines - The Case of the Mobile Game
Domain
Software product lines (SPL) processes are gradually being adopted
by many companies in several domains. A particular domain where the
adoption of such processes may bring relevant benefits is the mobile
applications domain given the big diversity of handsets, although
the characteristics of this domain usually create barriers to apply
these processes in practice, such as, restrictions of memory size
and processing power and different API implementations by different
manufacturers. In this context, this work presents briefly a practical
approach to implement core assets in a SPL applied to the mobile
game domain combining the good practices from the already published
processes and describes in details a case study performed with the
application of this approach, based on three different adventure
mobile games. The results of the case study have shown the approach
can be suitable for the domain in question.","A Case Study in Software Product Lines - The Case of the Mobile Game
Domain",1
153,"Developing an augmented reality racing game
Augmented reality (AR) makes it possible to create games in which
virtual objects are overlaid on the real world, and real objects
are tracked and used to control virtual ones. We describe the development
of an AR racing game created by modifying an existing racing game,
using an AR infrastructure that we developed for use with the XNA
game development platform. In our game, the driver wears a tracked
video see-through head-worn display, and controls the car with a
passive tangible controller. Other players can participate by manipulating
waypoints that the car must pass and obstacles with which the car
can collide. We discuss our AR infrastructure, which supports the
creation of AR applications and games in a managed code environment,
the user interface we developed for the AR racing game, the game's
software and hardware architecture, and feedback and observations
from early demonstrations.",Developing an augmented reality racing game,0
154,"Using prototypes in early pervasive game development
In this article we discuss various prototyping methods in early pervasive
game development. The focus is on pervasive games that are played
with mobile phones. Choosing the right prototyping method is crucial
in achieving results that can be used for validating or developing
further design ideas. In this article we give guidelines that help
the selection process and give ideas on methods that can be used
in different situations. We have play-tested pervasive game prototypes
using agile software prototype development methods, forum prototypes,
and guided paper prototyping methods. We give examples of five pervasive
games where these kinds of prototyping methods are used. In concluding,
we compare the results and discuss their benefits and disadvantages
in the game development process, that is, when the methods should
be used and what should be considered when using them.",Using prototypes in early pervasive game development,1
155,"Life-cycle of the games industry: the specificities of creative industries
This paper assesses the maturity of the games industry. The indicators
of industry maturity posited in the industry life-cycle theory are
discussed. The economic characteristics of creative, or cultural,
industries are listed. Empirical work is done on the concentration
of the international game development sector based on UK sales. The
growth of the Finnish games industry is analyzed based on original
statistics. The paper concludes that based on this empirical work
the software side of the games industry is far from mature. Explanations
for this finding are proposed based on the characteristics of the
games industry in particular and the creative industries in general.",Life-cycle of the games industry: the specificities of creative industries,1
156,"Heuristic Evaluation for Games: Usability Principles for Video Game
Design
Most video games require constant interaction, so game designers must
pay careful attention to usability issues. However, there are few
formal methods for evaluating the usability of game interfaces. In
this paper, we introduce a new set of heuristics that can be used
to carry out usability inspections of video games. The heuristics
were developed to help identify usability problems in both early
and functional game prototypes. We developed the heuristics by analyzing
PC game reviews from a popular gaming website, and the review set
covered 108 different games and included 18 from each of 6 major
game genres. We analyzed the reviews and identified twelve common
classes of usability problems seen in games. We developed ten usability
heuristics based on the problem categories, and they describe how
common game usability problems can be avoided. A preliminary evaluation
of the heuristics suggests that they help identify game-specific
usability problems that can easily be overlooked otherwise.","Heuristic Evaluation for Games: Usability Principles for Video Game
Design",1
157,"Using genres to customize usability evaluations of video games
Video games are varied, with vastly different visual layouts and interaction
styles; however, most games that share a common genre still have
many user interface similarities. These similarities suggest that
genres can be used as a conceptual framework for examining design
issues in video games, and for developing a deeper understanding
of how the design process can be specialized for specific types of
games. In this paper, we consider how genre relates to one aspect
of design---the usability of games, which deals with players' ability
to learn, control, and understand a game interface. We report results
from a study where we coded usability problems in reviews of 108
commercial video games. The review set included 18 games from each
of six major game genres. We statistically analyzed the problems
from each genre, and found significant differences between many of
the genres. We present usability profiles for each genre based on
the problem distributions that we found. The profiles describe both
common and infrequent problems in each genre and provide details
on how they commonly occur in games. The profiles can be used to
specialize usability evaluations by helping designers focus on common
problems seen in games from each genre.",Using genres to customize usability evaluations of video games,1
158,"A Multi-Core Solver for Parity Games
We describe a parallel algorithm for solving parity games, with applications
in, e.g., modal u-calculus model checking with arbitrary alternations,
and (branching) bisimulation checking. The algorithm is based on
Jurdzinski's Small Progress Measures. Actually, this is a class of
algorithms, depending on a selection heuristics. Our algorithm operates
lock-free, and mostly wait-free (except for infrequent termination
detection), and thus allows maximum parallelism. Additionally, we
conserve memory by avoiding storage of predecessor edges for the
parity graph through strictly forward-looking heuristics. We evaluate
our multi-core implementation's behaviour on parity games obtained
from u-calculus model checking problems for a set of communication
protocols, randomly generated problem instances, and parametric problem
instances from the literature.",A Multi-Core Solver for Parity Games,0
159,"Experience-based design of behaviors in videogames
Artificial intelligence in games is usually used for creating player s
opponents. Manual edition of intelligent behaviors for Non-Player
Characters (NPC) of games is a cumbersome task that needs experienced
designers. Amongst other activities, they design new behaviors in
terms of perception and actuation over the environment. Behaviors
typically use recurring patterns, so that experience and reuse are
crucial aspects for behavior design. In this paper we present a behavior
editor (eCo) using Case Based Reasoning to retrieve and reuse stored
behaviors represented as hierarchical state machines. In this paper
we focus on the application of different types of similarity assessment
to retrieve the best behavior to reuse. eCo is configurable for different
domains. We present our experience within a soccer simulation environment
(SoccerBots) to design the behaviors of the automatic soccer players.",Experience-based design of behaviors in videogames,0
160,"Tackling online game development problems with a novel network scripting
language
We describe a novel scripting language for writing bandwidth-efficient
online game logic. The language facilitates the development of deterministic,
concurrent, distributed games, with assurances of consistency maintenance
between clients and server. Our approach allows for increased simulation
accuracy when compared to dead reckoning, and removes the need to
write code to repair distributed state inconsistencies, or to explicitly
transfer data over a network.","Tackling online game development problems with a novel network scripting
language",1
161,"Opening up to agile game development
In fast-paced business environments like computer games, Agile would
seem to be the appropriate style of software development. However,
our study of three computer game studios revealed that game development
does not deploy Agile methods as such, but rather it shares some
of Agiles practices and values. We were intrigued by how agility
was triggered in game development; triggers undocumented by proponents
of Agile methods. This article distils our findings into guidelines
for nurturing and enhancing agility in creative software organizations.
Game development is both inspirational and unpredictable. A games
features may never be fully known at the outset of a project, but
emerge as the developers continually play-test it. This is because
a commercial game must be fun, entertaining and compelling;10 qualities
that are only really assessable when a game is compiled and played.
Agile methods would suggest that game developers write a test script.
This is perhaps more feasible when building commercial task-oriented
software, but a computer game has an added aesthetic dimension to
it; not just in terms of the look and feel, but the game-play too,
i.e. the rules and level of difficulty of the game. In this respect,
a game also needs to be tested intuitively by the developers; it
may functionally run, but is it fun?",Opening up to agile game development,1
162,"Collaboration in serious game development: a case study
This paper presents an ethnographic study of the development practices
at a small but successful company that develops serious games for
industry training. We concentrated on the day-to-day collaboration
of the studio team responsible for the game content and software,
and used qualitative research methods, including field observations,
contextual interviews and conversation analysis. This paper reports
our findings, emphasizing a holistic perspective encompassing social
and technical factors influencing collaboration in serious game development.
In particular, we report on how co-location and a positive social
environment work together with the technical tools and infrastructure
to provide an environment that facilitates full participation of
professionals with differing disciplinary perspectives, and contributes
to iterative development and refinement of the game.",Collaboration in serious game development: a case study,1
163,"Defining personas in games using metrics
Game metrical data are increasingly being used to enhance game testing
and to inform game design. There are different approaches and techniques
to gather the metrics data; however there seems to be a lack of frameworks
to read and make sense of it. In this paper, the concept of play-persona
is applied to game metrics, in the specific case of character-based
computer games, where the player controls a single protagonist, around
whom the gameplay and -- story evolves. A case is presented for Hitman:
Blood Money (IO Interactive, 2007). Player-controlled game characters
can be deconstructed into a range of components and these expressed
as monitored game metrics. These metrics can subsequently be utilized
to discover patterns of play by building play-personas: Modeled representations
of how players interact with the game. This process can also be useful
to assist game design, by informing whether the game facilitates
the specific play patterns implied by theoretical play-personas.",Defining personas in games using metrics,0
164,"Scaling in games and virtual worlds
Online games and virtual worlds have familiar scaling requirements,
but don't be fooled: Everything you know is wrong.",Scaling in games and virtual worlds,1
165,"Playing online games against computer- vs. human-controlled opponents:
Effects on presence, flow, and enjoyment
The purpose of this study was to examine whether playing online games
against other users leads to different experiences in comparison
with playing against computer-controlled opponents. Thereby, a one-factorial
multivariate design was used (computer-controlled vs. human-controlled
opponent). Dependent variables were the participants feelings of
presence and flow. Additionally, the amount of enjoyment was measured.
The findings indicate that the type of opponent influences playing
experiences: participants who played against a human-controlled opponent
reported more experiences of presence, flow, and enjoyment, whereby
the strongest effect refers to the experience of presence. Furthermore,
strong relations between presence, flow, and enjoyment were observed.
Further analyzes suggest that flow mediates the relationship between
presence and enjoyment.","Playing online games against computer- vs. human-controlled opponents:
Effects on presence, flow, and enjoyment",1
166,"Guidelines for designing augmented reality games
The growing popularity of augmented reality (AR) games in both a research
and more recently commercial context has led for a need to take a
closer look at design related issues which impact on player experience.
While issues relating to this area have been considered, to date
most of the emphasis has been on the technology aspects. Furthermore
it is almost always assumed that the augmented reality element in
itself will provide a sufficient experience for the player. This
has led to a need to evaluate what makes a successful augmented reality
game. In this paper we present a set of design guidelines which are
drawn from experiences of three mixed reality games. The guidelines
provide specific guidance on relationships between real and virtual
space, social interaction, use of AR technologies, maintaining consistent
themes and implicitly address higher level aspects such as presence
within a particular augmented reality place.",Guidelines for designing augmented reality games,1
167,"Declarative processing for computer games
Most game developers think of databases as nothing more than a persistence
solution. However, database research is concerned with the wider
problem of declarative processing. In this paper we demonstrate how
declarative processing can be applied to computer games. We introduce
the state-effect pattern, a design pattern that allows game developers
to design parts of their game declaratively. We present SGL, a special
scripting language which supports this design pattern and which can
be compiled to a declarative language like SQL. We show how database
techniques can process this design pattern in a way that improves
performance by an order of magnitude or more. Finally, we discuss
some design decisions that developers must make in order to adopt
this pattern effectively.",Declarative processing for computer games,1
168,"Reasoning about coalitional games
We develop, investigate, and compare two logic-based knowledge representation
formalisms for reasoning about coalitional games. The main constructs
of Coalitional Game Logic (cgl) are expressions for representing
the ability of coalitions, which may be combined with expressions
for representing the preferences that agents have over outcomes.
Modal Coalitional Game Logic (mcgl) is a normal modal logic, in which
the main construct is a modality for expressing the preferences of
groups of agents. For both frameworks, we give complete axiomatisations,
and show how they can be used to characterise solution concepts for
coalitional games. We show that, while cgl is more expressive than
mcgl, the former can only be used to reason about coalitional games
with finitely many outcomes, while mcgl can be used to reason also
about games with infinitely many outcomes, and is in addition more
succinct. We characterise the computational complexity of satisfiability
for cgl, and give a tableaux-based decision procedure.",Reasoning about coalitional games,0
169,"Extending the Reference Method for Game Production: A Situational
Approach
In this research, we describe the development of a situational game
production method. In earlier research, the reference method for
game production was proposed, which gives a complete overview of
all possible activities and deliverables in a game production process.
However, this method is a generic method that is not suitable for
every game development project. The need exists for a method that
can be tuned to different situations. In respect to this research,
a situation corresponds to a game genre or other factors that influence
the development steps. We conducted case studies at nine Dutch game
companies, in order to a) validate the activities and deliverables
in the existing reference method, and b) analyze the companiespsila
existing methods in order to identify new situational routes which
can be used to extend the reference method. We use method engineering
principles and a meta-modeling technique to document, compare and
analyze the nine methods. Based on the analysis, we propose four
new routes, where each route represents a specific production case.
The four routes are: serious games, online games, prototype and localization.
Finally, we integrate the new routes with the existing method by
developing a route map.","Extending the Reference Method for Game Production: A Situational
Approach",1
170,"Adaptive Experience Engine for Serious Games
Designing games that support knowledge and skill acquisition has become
a promising frontier of education techniques, since games are able
to capture the user concentration for long periods and can present
users with realistic and compelling challenges. In this scenario,
there is a need for scientific and engineering methods to build games
not only as more realistic simulations of the physical world but
as means to provide effective learning experiences. Abstracting state
of the art serious games' (SGs) features, we propose a new design
methodology for the sand box serious games (SBSGs) class, decoupling
content from the delivery strategy during the gameplay. This methodology
aims at making design more efficient and standardized in order to
meet the growing demand for interactive learning. The methodology
consists in modeling an SBSG as a hierarchy of tasks (e.g., missions)
and specifies the requirements for a runtime scheduling policy that
maximizes learning objectives in a full entertainment context. The
policy is learned by an experience engine (EE) based on computational
intelligence. In this approach, the domain-expert author focuses
on the creation and semantic annotation of tasks. Tasks are put in
a repository and can then be exploited by game designers who define
the expected learning curve and other requirements about education
and entertainment for the game. The task sequencing that aims at
matching such specifications with the real user profile is then presented
to the EE. The EE can operate also in absence of the specification
of the learning curve, continuously adapting the game flow without
aiming at the achievement of target knowledge levels predefined by
the author. We have implemented an EE module based on genetic computation
and reinforcement learning (RL) atop of a state-of-the-art game engine.
Test results show that the EE is able to define in real-time missions
that meet the requirements expressed by the author.",Adaptive Experience Engine for Serious Games,0
171,"What makes a good game? Using reviews to inform design
The characteristics that identify a good game are hard to define and
reproduce, as demonstrated by the catalogues of both successes and
failures from most games companies. We have started to address this
by undertaking a grounded theoretical analysis of reviews garnered
from games, both good and bad, to distil from these common features
that characterize good and bad games. We have identified that a good
game is cohesive, varied, has good user interaction and offers some
form of social interaction. The most important factor to avoid is
a bad pricing. Successfully achieving some of these good factors
will also outweigh problems in other areas.",What makes a good game? Using reviews to inform design,1
172,"Aspect-oriented procedural content engineering for game design
Generally progressive procedural content in the context of 3D scene
rendering is expressed as recursive functions where a finer level
of detail gets computed on demand. Typical examples of content procedurally
generated are fractal images and noise textures. Unfortunately, not
always the content can be expressed in this way, developers and content
creators need the data to have some peculiarity (like windows on
a wall for a house 3D model) and a method to drive data simplification
without losing relevant details. In this paper we discuss how aspect
oriented (AO) techniques can be used to drive the content creation
process by mapping each data peculiarity to the code to generate
it. Using aspects will let us to partially evaluate the code of the
procedure improving the performance without losing the flow of the
generation logic. We will also discuss how the use of AO can provide
techniques to build simplified version of the data through code transformations.",Aspect-oriented procedural content engineering for game design,0
173,"Providing Novel and Useful Data for Game Development Using Usability
Expert Evaluation and Testing
A case study is done to study whether usability expert evaluation
and testing are appropriate for game development. In this study,
it identifies if the usability expert evaluation and testing provide
novel and useful data for game development. For this experiment,
a computer game is first evaluated and then tested. Then game developers
are asked to rate the findings and give other feedback about the
methods used and the results gained. The usability expert evaluation
and testing have considerable face validity in game development because
the results of a case study were both novel and useful for game development.","Providing Novel and Useful Data for Game Development Using Usability
Expert Evaluation and Testing",1
174,"Plagiarism detection in game-playing software
Plagiarism is a growing issue in the field of game-playing software.
As new ideas and technologies are successfully implemented in free
and commercial programs, they will be reused and revisited by later
programs until they become standard, but on the other hand the same
phenomenon can lead to accusations and claims of plagiarism, especially
in competitive scenarios such as computer chess tournaments. Establishing
whether a program is a ""clone"" or derivative of another can be a
difficult and subjective task, left to the judgment of the individual
expert and often resulting in a shade of gray rather than black and
white verdicts. Tournaments judges and directors have to decide how
similar is too similar on a case-by-case basis. This paper presents
an objective framework under which similarities between game programs
can be judged, using chess as a test case.",Plagiarism detection in game-playing software,0
175,"Detecting clones in game-playing software
The number of competitions using software agents in the AI or entertainment
computing fields has grown over the years from a few to many. For
instance, tournaments exist to let programs to play chess, checker,
go, bridge, poker, simulated soccer, etc. While most competitions
are organized for research purposes, some have a commercial side,
thus raising the stakes for the software authors. Hence, plagiarism
is becoming a problematic issue in the field of game-playing software
agents used in competitions and tournaments. As new ideas and technologies
are successfully implemented in open source programs, they will be
reused and revisited by later programs until they become standard
practices, but on the other hand the same phenomenon can lead to
accusations and claims of plagiarism, especially in competitive scenarios,
such as computer chess tournaments. Establishing whether a program
is a clone or derivative of another can be a difficult and subjective
task, left to the judgment of the individual expert and often resulting
in a shade of gray rather than black and white verdicts. Tournaments
judges and directors have to decide how similar is too similar on
a case-by-case basis. This paper presents an objective framework
under which similarities between game programs can be judged, using
chess as a test case.",Detecting clones in game-playing software,0
176,"Game Usability Heuristics (PLAY) for Evaluating and Designing Better
Games: The Next Iteration
Game developers have begun applying formal human-computer interaction
(HCI) principles in design. Desurvire et al [2] adapted a set of
Heuristics for productivity software to games. The resulting set,
presented at CHI 2004, was Heuristics to Evaluate Playability (HEP).
Generalization of these heuristics is required to make them applicable
to a multiple of game genres and game deliveries. This follow-up
study focused on the refined list, Heuristics of Playability (PLAY),
that can be applied earlier in game development as well as aiding
developers between formal usability/playability research during the
development cycle. Heuristics were formed based on their efficacious
scores on the popular game review website, metacritic.com. Fifty-four
gamers rated High and Low ranked games on 116 potential heuristics.
Implications for how these Heuristics will help developers improve
game quality are discussed. PLAY has been found useful in design
evaluation and elf-report survey format.","Game Usability Heuristics (PLAY) for Evaluating and Designing Better
Games: The Next Iteration",1
177,"Compositional applications of a game engine
In this paper it is suggested that game engine technologies provide
the capacity for developing existing modes of artistic presentation
and dissemination within the realms of sound art and music composition/performance.
The paper outlines three creative works currently under development
which are predominantly preoccupied with the use of game engines
for musical and/or sonic purposes. Each project utilizes the game
engine Unity 3D used in conjunction with external software for sound
generation, synthesis or musical analysis. The artistic context and
motivations of the work are briefly discussed, with the three projects,
SpiralSet, MagNular, and CollideOscope Score subsequently being described
and outlined.",Compositional applications of a game engine,0
178,"A Semantic Navigation Model for Video Games
Navigational performance of artificial intelligence (AI) characters
in computer games is gaining an increasingly important role in the
perception of their behavior. While recent games successfully solve
some complex navigation problems, there is little known or documented
on the underlying approaches, often resembling a primitive conglomerate
of ad-hoc algorithms for specific situations. In this paper we develop
a generic navigation model which we call semantics-based, because
it enables AI to incorporate a wide variety of navigation information
into the planning of a character's behavior, including raw geometry,
strategic objects, and locomotion abilities. The role of semantics
in this domain is highlighted and the presentation of the main components
of this semantic navigation model is illustrated with a variety of
examples. The semantic navigation model has been validated and implemented
within a navigation system for Unreal Engine 3 that requires little
level designer intervention, has a rich interface for AI programmers,
and can be extended with other types of semantic information. It
is concluded that using this navigation model delivers more natural
paths, requires fewer world annotation, and supports dynamic re-planning.",A Semantic Navigation Model for Video Games,0
179,"An Online Survey System on Computer Game Enjoyment and Personality
This paper discusses the development of an online survey instrument
to measure the game enjoyment and player characteristics like age,
gender and personality traits. A research framework of game play
is proposed based on a review of prior research on computer game
enjoyment, game characteristics, personality theories, effects of
computer game play, and technology acceptance model. The proposed
framework suggests that an appropriate fit between characteristics
of the player and gaming technology will result in greater enjoyment
while social influence may moderate effects of the fit. The survey
will allow the researcher to establish the fit profiles between player
characteristics and game play.",An Online Survey System on Computer Game Enjoyment and Personality,0
180,"Cognitive evaluation of video games: players' perceptions
Video games were evaluated by players very familiar with them, along
five cognitive dimensions drawn from the PASS model. These 233 gamers
evaluated up to three games each which were then placed into genres
defined by GameSpot.com and compared in terms of their perceived
cognitive components. Game genre, for which there was sufficient
number of evaluations, differed along each cognitive dimension.",Cognitive evaluation of video games: players' perceptions,0
181,"Measuring player experience on runtime dynamic difficulty scaling
in an RTS game
Do players find it more enjoyable to win, than to play even matches?
We have made a study of what a number of players expressed after
playing against computer opponents of different kinds in an RTS game.
There were two static computer opponents, one that was easily beaten,
and one that was hard to beat, and three dynamic ones that adapted
their strength to that of the player. One of these three latter ones
intentionally drops its performance in the end of the game to make
it easy for the player to win. Our results indicate that the players
found it more enjoyable to play an even game against an opponent
that adapts to the performance of the player, than playing against
an opponent with static difficulty. The results also show that when
the computer player that dropped its performance to let the player
win was the least enjoyable opponent of them all.","Measuring player experience on runtime dynamic difficulty scaling
in an RTS game",0
182,"Exploring success factors of video game communities in hierarchical
linear modeling: The perspectives of members and leaders
Video games are enjoying fast-growing popularity, becoming a major
component of young people s social lives and leisure activities.
Many players share information and conduct social interactions in
virtual communities (VC). The current study sought to examine the
relationships between members and leaders in such video game communities
using a number of variables to describe the member (i.e., knowledge
sharing, usefulness, enjoyability, off-site interaction, satisfaction,
loyalty, and intention to use) and the leader (i.e., leader involvement).
Based on a sample of 2227 members and 41 leaders in 30 video game
communities, the research demonstrated the use of a two-level hierarchical
linear modeling (HLM) to examine the relationships of VC leaders
and members, appropriately adjusted for a nested structure. The results
indicated that leaders who engage in higher levels of involvement
in VC are more likely to have members who agree with and respond
to the community. Furthermore, member- and leader-level factors were
significantly associated with member satisfaction: knowledge sharing,
usefulness, and enjoyability explained within-VC variance while leader
involvement explained between-VC variance. Finally, member satisfaction
demonstrated positive effects on both member loyalty and intention
to use. The study further discussed the implications of these findings,
offering direction for future research.","Exploring success factors of video game communities in hierarchical
linear modeling: The perspectives of members and leaders",0
183,"Design facial appearance for roles in video games
Roles in video games often serve as avatars of players. Different
game players may have their particular preferences on a role s facial
appearance. It would be desirable to allow players to customize the
design of roles. This paper presents two methods for recommending
a roles facial appearance for a particular game player and illustrates
the two methods by using heroic roles as an example. The two recommendation
methods are designated as the text-input and the picture-input approaches.
The text-input approach requests the game player to carry out pairwise
comparisons for determining the relative weights of 16 personality
traits of heroes. The recommendation mechanism for the text-input
approach is based on the fuzzy AHP (analytic hierarchy process).
Whereas the picture-input approach requests the game player to view
a sample set of pictures and rate his/her preferences on each picture.
The recommendation mechanism for the picture-input approach is based
on the BP (back-propagation) neural network. Experiments indicated
that the text-input approach is more effective in terms of recommending
an appropriate facial appearance, yet at the expense of needing more
user time.",Design facial appearance for roles in video games,0
184,"An adaptative game loop architecture with automatic distribution
of tasks between CPU and GPU
This article presents a new architecture to implement all game loop
models for games and real-time applications that use the GPU as a
mathematics and physics coprocessor, working in parallel processing
mode with the CPU. The presented model applies automatic task distribution
concepts. The architecture can apply a set of heuristics defined
in Lua scripts in order to get acquainted with the best processor
for handling a given task. The model applies the GPGPU (general-purpose
computation on GPUs) paradigm. In this article we propose an architecture
that acquires knowledge about the hardware by running tasks in each
processor and, by studying their performance over time, finding the
best processor for a group of tasks.","An adaptative game loop architecture with automatic distribution
of tasks between CPU and GPU",0
185,"Software Engineering Challenges in Game Development
In software engineering (SE), video game development is unique yet
similar to other software endeavors. It is unique in that it combines
the work of teams covering multiple disciplines (art, music, acting,
programming, etc.), and that engaging game play is sought after through
the use of prototypes and iterations. With that, game development
is faced with challenges that can be addressed using traditional
SE practices. The industry needs to adopt sound SE practices for
their distinct needs such as managing multimedia assets and finding
the ldquofunrdquo in game play. The industry must take on the challenges
by evolving SE methods to meet their needs. This work investigates
these challenges and highlights engineering practices to mitigate
these challenges.",Software Engineering Challenges in Game Development,1
186,"Design and Implementation of a Multiplayer Bluetooth Game
The mobile phones have undergone a tremendous advancement in terms
of technology. They are no more a communicating device. They are
more into computing, photography and entertainment. There are numerous
single player games available on mobile phones. But we have successfully
implemented a multiplayer game on mobile phone by making use of the
Bluetooth functionality of the mobile phone. This paper focuses on
the design and implementation of a multiplayer Bluetooth game. The
game chosen was ""Four Connect"" and it is being successfully implemented.",Design and Implementation of a Multiplayer Bluetooth Game,1
187,"Game design strategies for collectivist persuasion
A fundamental feature of serious games is persuasion, an attempt to
influence behaviors, feelings, or thoughts. Much of the existing
research on serious games and, more generally, on persuasive technology
(PT), does not address the important links between persuasion and
culture. It has tended to originate from Western, individualist cultures,
and has focused on how to design for these audiences. In this paper,
we describe the design of one of two versions of a serious game we
developed about quitting smoking titled Smoke? which is targeted
at collectivist players. We show how the design was informed by persuasive
strategies we identified from the cross-cultural psychology literature,
intended for use in games for players of collectivist cultures: HARMONY,
GROUP OPINION, MONITORING, DISESTABLISHING, and TEAM PERFORMANCE.
We then discuss the results of a quantitative investigation of the
effects of both game versions on both individualist and collectivist
players.",Game design strategies for collectivist persuasion,0
188,"Expert review method in game evaluations: comparison of two playability
heuristic sets
The expert review method is not yet widely adopted in game evaluations,
although it has been used successfully in productivity software evaluations
for years. In order to use the method effectively, there need to
be playability heuristics that take into account the characteristics
of the videogames. There are a few playability heuristic sets available,
but they have several differences, and they have not been compared
to discover their strengths and weaknesses in game evaluations. In
this paper, we report on a first study comparing two playability
heuristic sets when evaluating the playability of a videogame. The
results indicate that the heuristics can assist the evaluators in
evaluating both the user interface and the gameplay aspects of the
game. However, playability heuristics need to be developed further
before they can be utilized by the practitioners. Especially, the
clarity and comprehensibility of the heuristics need to be improved,
and the optimal number of heuristics is still open.","Expert review method in game evaluations: comparison of two playability
heuristic sets",1
189,"Evaluation of User s Physical Experience in Full Body Interactive
Games
This paper is an evaluation of full body interactive games using Kroflic s
and Labans framework of Body, Space, Time and Relationship. An experiment
with 8 participants playing 10 games for 20 minutes was conducted
and recorded to digital video. Body, Space and Time elements have
been measured using observation, motion tracking and Quantity of
Motion (QoM). The results from the experiment informed the designer
about the participants physical experience through the analysis
of postures used in each game, the quality of the movement, the body
parts used in the interaction, the playing area, the direction of
movement, direction of gaze, tempo, dynamics and QoM. The experiment
informed the designer about important issues of the user s physical
experience and proved that the method can provide useful information
in the development and evaluation of full body interactive games.
The theoretical work of Laban and Kroflic also proved useful for
interaction and games design in the transition from desktop to full
body interactive games.","Evaluation of User s Physical Experience in Full Body Interactive
Games",0
190,"Making the case for mobile game development
The term mobile culture reflects a phenomenal role that mobile devices
play in our everyday lives. Accordingly, in the eyes of many current
students, computing technology is associated with their mobile phones
and gadgets instead of larger desktops that are commonly used in
the academic environment. Most of them

carry mobile phones with them at all times, and being able to develop
and immediately run an application on their phone may offer an experience
that is as practical and as close to the real world as it gets. By
using mobile computing and, in particular, mobile game development,
it may be possible to make course material more relevant to students;
this also may show a stronger connection to real-world applications
and technology that surround our students.",Making the case for mobile game development,0
191,"Weighted game developer qualifications for consideration in curriculum
development
Game development programs are being added to computer science departments
as either a track, minor, or major in post-secondary institutions
across the United States. These programs are being developed with
little published quantitative or qualitative research on what such
programs should entail. The quantitative research in this pilot study
defines qualifications sought when hiring game developers for positions
in industry. Using cross-sectional data, qualifications from job
advertisements were coded, categorized, and then subcategorized and
weighted totals were calculated based on skills being either required
or desired. Weighted totals in each subcategory were compared and
ranked. The top 10 qualifications are provided, along with a breakdown
of rankings of all subcategories within each category. Subcategories
of Languages and Tools/Environments are also discussed briefly to
highlight key qualifications in each.","Weighted game developer qualifications for consideration in curriculum
development",0
192,"An Algebraic Account of References in Game Semantics
We study the algebraic structure of a programming language with higher-order
store, in the style of ML references. Instead of working directly
on the operational semantics of the language, we consider its fully
abstract game semantics defined by Abramsky, Honda and McCusker one
decade ago. This alternative description of the language is nice
and conceptual, except on one significant point: the interactive
behavior of the higher-order memory cell is reflected in the model
by a strategy cell whose definition remains slightly enigmatic. The
purpose of our work is precisely to clarify this point, by providing
a neat algebraic definition of the strategy. This conceptual reconstruction
of the memory cell is based on the idea that a general reference
behaves essentially as a linear feedback (or trace operator) in an
ambient category of Conway games and strategies. This analysis leads
to a purely axiomatic proof of soundness of the model, based on a
natural refinement of the replication modality of tensor logic.",An Algebraic Account of References in Game Semantics,0
193,"Designing Storytelling Games That Encourage Narrative Play
Storytelling games are a form of competitive storytelling framed in
the context of gameplay. However, most existing storytelling games
emphasize competitive gameplay and winning at the expense of competitive
narrative play; they tend to be storytelling games rather than storytelling
games. This paper explores issues related to the design of storytelling
games that are won through narrative play and proposes a number of
design rules for this. These design rules not only help in the design
of storytelling games with a stronger element of narrative play,
they also have implications for the design of computational storytelling
systems.",Designing Storytelling Games That Encourage Narrative Play,1
194,"Architectural studies of games engines - The quake series
The move of commercial companies to ""open-source"" their products presents
challenges for both the proposing company and the wider open source
(OS) communities. The former has to align their source code to the
OS practices, while the latter has to cope with large amounts of
closely-developed code. This paper aims to present relevant data
and results from the analysis performed on the Quake family of OSS
game engines, including findings and an initial interpretation of
the data. This forms the basis for the architectural understanding
necessary to design and develop improvements and new features to
the studied game engines. The presented approach constitutes a useful
resource for games developers who wish to contribute to the further
evolution of these games engines; and it provides insights into how
the Quake engine architecture has evolved in practice since it was
released as an open source project.",Architectural studies of games engines - The quake series,0
195,"From playability to a hierarchical game usability model
This paper presents a brief review of current game usability models.
This leads to the conception of a high-level game usability framework
model that integrates current usability approaches in game industry
and game research.",From playability to a hierarchical game usability model,0
196,"ISO 9241-9 evaluation of video game controllers
Fifteen participants completed a study comparing video game controllers
for point-select tasks. We used a Fitts' law task, as per ISO 9241-9,
using the Nintendo Wii Remote for infrared pointing, the Nintendo
Classic Controller for analogue stick pointing, and a standard mouse
as a baseline condition. The mouse had the highest throughput at
3.78 bps. Both game controllers performed poorly by comparison. The
Wii Remote throughput was 31.5% lower, at 2.59 bps, and the Classic
Controller 60.8% lower at 1.48 bps. Comparing just the video game
controllers, the Wii Remote presents a 75% increase in throughput
over the Classic Controller . Error rates for the mouse, Classic
Controller , and the Wii Remote were 3.53%, 6.58%, and 10.2%, respectively.
Fourteen of 15 participants expressed a preference for the Wii Remote
over the Classic Controller for pointing tasks in a home entertainment
environment.",ISO 9241-9 evaluation of video game controllers,1
197,"Turning shortcomings into challenges: Brain computer interfaces for
games
In recent years we have seen a rising interest in brain computer interfacing
for human computer interaction and potential game applications. Until
now, however, we have almost only seen proof-of-concepts where a
single BCI paradigm is demonstrated to work as a simple control mechanism,
as a measurement of user state, or for neurofeedback. There have
hardly been any attempts to design BCI games where BCI is considered
to be one of multiple possible input modalities (together with keyboard,
speech, gestures, etc.) that can be used to control the game. One
reason may be that research still follows the paradigms of the traditional,
medically oriented, BCI approaches. In this paper we discuss current
BCI research from the viewpoint of games and game design. It is hoped
that this survey will make clear that we need to design different
games than we used to, but that such games can nevertheless be interesting
and exciting.","Turning shortcomings into challenges: Brain computer interfaces for
games",0
198,"Simulation as a game design tool
In this paper we suggest using gameplay simulations on a logical event
level as a design tool already in the early stages of the development
process. The approach is centred on abstracting all unnecessary details
of the gameplay to produce a highly simplified model of the game
system. Compared to other kinds of intermediate design representations,
such as sketches and prototypes, the simulations can reveal problems
and opportunities in the longer term dynamics of possible gameplay.
As an example we describe an implementation of a simulation model
for the game Tower Bloxx using a simulation software package called
DisCo.",Simulation as a game design tool,1
199,"A modular parametric architecture for the TORCS racing engine
This paper presents our approach to TORCS Car Racing Competition 2009,
it is based on a complete modular architecture capable of driving
automatically a car along a track with or without oppents. The architecture
is composed of five simple modules being each one responsible for
a basic aspect of car driving. The modules control gear shiftings,
steer movements and pedals positions by using of simple functions
meanwhile the allowed speed in a certain track segment is managed
by a simple TSK fuzzy system.",A modular parametric architecture for the TORCS racing engine,0
200,"Smart composition of game objects using dependency injection
Most game engines are based on inheritance of game objects and/or
componentization of behaviors. While this approach enables clear
visualization of the system architecture, good code reuse, and fast
prototyping, it brings some issues, mostly related to the high dependency
between game objects/components instances. This dependency often
leads to static casts and null pointer references that are difficult
to debug. In this article we propose the use of the dependency injection
design pattern to safely initialize game objects and lessen the programmer's
role in handling these issues both during the prototyping and production
phases. Since these dependencies are attributes of game objects and
the injection occurs only at the initialization pass, there is no
performance penalty at the game loop.",Smart composition of game objects using dependency injection,1
201,"Visual generative behavior patterns to facilitate game development
The worldwide videogame and interactive entertainment industry revenue
is expected to reach over $50 billion in 2009 [2]. The majority of
the effort in game development revolves around content creation and
many resources are spent on it. Game companies construct or buy a
set of content creation tools to aid the designers in their work.
However, these tools only focus on the artwork, interfaces, game
levels, and so on but none of them really focus on the content which
is related to the gameplay or the game story, that is, the dynamic
aspect of the game. Creating this story-related content, namely the
scripts for the behavioral aspect in computer games, and translating
this into appropriate program code is a very difficult task. For
complex scripting, the developer has to resort to manually write
code using scripting languages (i.e. Lua or Python). Furthermore,
these languages are not tailored for games which also do not make
them easier. Over the years, game developers have come up with many
predefined (parts of) solutions to improve the development process
[1][3]. In addition, in practice, people are also trying to avoid
writing long scripts by using existing scripts and customizing them
to fit their needs.",Visual generative behavior patterns to facilitate game development,0
202,"A Study on User Experience of Online Games
User experience issues in online games are studied with the theory
and method of user-centered design and game playability as the breakthrough
point, and then we can get the design guidelines about the user experience.
According to the data and then we use factor analysis and correlation
analysis to study the degree of correlation between the various indicators
and player satisfaction. According to the results, a user experience
design guidelines is proposed. This guidelines can be referenced
by the designer for the game development and other IT products.",A Study on User Experience of Online Games,1
203,"What went wrong? A survey of problems in game development
Despite its growth and profitability, many reports about game projects
show that their production is not a simple task, but one beset by
common problems and still distant from having a healthy and synergetic
work process. The goal of this article is to survey the problems
in the development process of electronic games, which are mainly
collected from game postmortems, by exploring their similarities
and differences to well-known problems in traditional information
systems.",What went wrong? A survey of problems in game development,1
204,"Relating cognitive models of computer games to user evaluations of
entertainment
As the interactive entertainment industry matures, a better understanding
of what makes software entertaining is needed. A natural starting
point is the application of traditional Human-Computer Interaction
(HCI) tools to interactive entertainment software. HCI tools include
cognitive models that researchers have used to model users' thought
processes and evaluate interface design. This paper users a simple
cognitive model to investigate the relationship between the complexity
of an interaction and the entertainment experienced by the user.
We design a simple computer game, create a normative model for how
a user plays this game, and build several variations of this game
such that normative models of these variants differed across two
factors: pace and complexity. User studies conducted on these variations
allow comparison with these factors to user performance and self-reported
user enjoyment. Users ingame enjoyment was found to be related to
both the subject's performance and the game complexity.","Relating cognitive models of computer games to user evaluations of
entertainment",1
205,"A Case Study on Using RTF for Developing Multi-player Online Games
Real-Time Online Interactive Applications (ROIA) include a broad spectrum
of online computer games, as well as challenging distributed e-learning
applications, like virtual classrooms and collaborative environments.
Development of ROIA poses several complex tasks that currently are
addressed at a low level of abstraction. In our previous work, we
presented the Real-Time Framework (RTF) - a novel middleware for
a high-level development and execution of ROIA in single- and multi-server
environments. This paper describes a case study in which a simple
but representative online computer game is developed using RTF. We
explain how RTF supports the design of data structures and their
automatic serialization for network transmission, as well as determining
and processing user actions when computing a new game state; the
challenge is to provide the state updates to all players in real
time at a very high frequency.",A Case Study on Using RTF for Developing Multi-player Online Games,0
206,"Prediction-based real-time resource provisioning for massively multiplayer
online games
Massively Multiplayer Online Games (MMOGs) are a class of computationally
intensive client server applications with severe real-time Quality
of Service (QoS) requirements, such as the number of updates per
second each client needs to receive from the servers for a fluent
and realistic experience. To guarantee the QoS requirements, game
providers currently over-provision a large amount of their resources,
which makes the overall efficiency of provisioning and utilization
of resources rather low and prohibits any but the largest providers
from joining the market. To address this deficiency, we propose a
new prediction-based method for dynamic resource provisioning and
scaling of MMOGs in distributed Grid environments. Firstly, a load
prediction service anticipates the future game world entity distribution
from historical trace data using a fast and flexible neural network-based
method. On top of it, we developed generic analytical game load models
used to foresee future hot-spots that congest the game servers and
make the overall environment fragmented and unplayable. Finally,
a resource allocation service performs dynamic load distribution,
balancing, and migration of entities that keep the game servers reasonably
loaded such that the real-time QoS requirements are maintained. Experimental
results based on a realistic simulation environment demonstrate the
advantages of our prediction service compared to other conventional
methods, especially due to its ability to adapt to different user
load patterns, and a reduction of the average over-allocation from
250% (in the case of static over-provisioning) to around 25% using
our dynamic provisioning method.","Prediction-based real-time resource provisioning for massively multiplayer
online games",0
207,"Extended cooperative networks games
We present here a pricing model which is an extension of the Cooperative
Game concept and which includes a notion of Price-Dependent Demand.
We present some existence results as well as some algorithms, and
conclude by discussing a specific problem related to Network Pricing.",Extended cooperative networks games,0
208,"Automatic prototyping in model-driven game development
Model-driven game development (MDGD) is an emerging paradigm where
models become first-order elements in game development, maintenance,
and evolution. In this article, we present a first approach to 2D
platform game prototyping automatization through the use of model-driven
engineering (MDE). Platform-independent models (PIM) define the structure
and the behavior of the games and a platform-specific model (PSM)
describes the game control mapping. Automatic MOFscript transformations
from these models generate the software prototype code in C++. As
an example, Bubble Bobble has been prototyped in a few hours following
the MDGD approach. The resulting code generation represents 93&percnt;
of the game prototype.",Automatic prototyping in model-driven game development,1
209,"Playful vs. serious instruction giving in a 3D game environment
In this paper we introduce two NLG systems that we developed for the
GIVE challenge, which was aimed at the evaluation of natural language
generation (NLG) systems. The Challenge involved automatically generating
instructions for users to carry out a task in a 3D game environment.
One of our systems focused on generating optimally helpful serious
instructions while the other focused on entertainment, providing
more playful instructions. We used the data gathered in the Challenge
both subjective user ratings and objective task performance data
to compare the efficiency and entertainment value of both systems.
We found a clear difference in efficiency, but were unable to prove
that one system was more entertaining than the other. This could
be explained by the fact that the set-up and evaluation methods of
the GIVE Challenge were not aimed at measuring entertainment. Based
on our experiences, we give some suggestions for the set-up of future
installments of the Challenge.",Playful vs. serious instruction giving in a 3D game environment,1
210,"Towards Emotional Characters in Computer Games
This paper describes our research on integrating emotion aspects into
characters of video games. Motivation for this is the significant
absence of emotive expression in most characters of current games.
In order to provide players with a more immersed game experience,
it is essential that characters show compelling expressions, in particular,
facial expressions. As a research methodology, we took several intense
scenes from classic movies and evaluated what would be necessary
to allow a virtual character to reenact the scenes inside a game.
The recreated scenes should convey the same emotions as the original
scenes. Our approach represents the internal state of a video game
characters by using a PAD-based model, as well as modeling the impact
on it of many relevant environment aspects. Representing this internal
state also involves blending together animations to create lively
facial expressions. We conclude that the resulting model is good
enough to allow scenes to be recreated with an emotional load similar
to the original scenes. The approach is also successful inimproving
the consistency of the mood of the characters based on their personality.",Towards Emotional Characters in Computer Games,1
211,"Head Tracking in First-Person Games: Interaction Using a Web-Camera
Recent advances in face-tracking technology have made it possible
to recognize head movements using a commodity web-camera. This development
has created exciting possibilities for enhancing player enjoyment
during computer game play. In order to ascertain the real-world potential
for head gestural input to First Person Shooter games, we have developed
seven diverse interaction techniques and integrated these with a
modern games engine. Evaluation of the techniques was carried out
with four focus groups made up of expert games developers and experienced
end-users. One of the techniques was further refined and subjected
to a follow-up comparison test with promising results. A set of guidelines
for the future development of head interaction techniques for computer
games has been derived from the studies. All of the techniques have
been built upon freely available software and open-sourced to encourage
further research in this area.",Head Tracking in First-Person Games: Interaction Using a Web-Camera,0
212,"Generative conversation tool for game writers
Conversation is an important part of many games, whether it is there
to provide information or entertainment. In the current state of
commercial game development, almost all conversation is hand-authored.
Further, different authoring approaches are used for conversations
between non-player characters (typically linear scripting) versus
conversations between a non-player character and a human player (typically
dialogue trees). In this paper, we present a tool, designed in collaboration
with Telltale Games, for creating cocktail party conversations in
which characters engage in free-flowing conversations. From an authorial
perspective, we start at the hand-authoring side of the spectrum
and add system-level support for conversation generation -- our aim
is to decrease the authorial burden of creating a conversation while
remaining close to existing methods the company's designers are familiar
with using.",Generative conversation tool for game writers,0
213,"Research on a New Development Framework for Mobile Games
A new development framework for mobile games is proposed. In this
framework, pressure movement module, module of thread pool based
on I/O completion port, and message module are explained in detail.
The proposed framework can solve three main problems caused by traditional
framework. Firstly, single server may exhaust their resources. Secondly,
synchronization and exclusion of multi-thread can lead to huge system
resource consumption. Finally, server can not manage thread resources
flexibly. Experimental results show that the proposed framework is
effective.",Research on a New Development Framework for Mobile Games,0
214,"Playability: How to Identify the Player Experience in a Video Game
Nowadays Video Games occupy a privileged position in the leisure and
entertainment market, representing the fastest-growing industry globally.
In this paper we will analyse how, in video game development, Usability
alone is not sufficient to achieve the optimum Player Experience.
We argue that the concept of Usability needs broadening and deepening,
to embrace further attributes and properties that identify and describe
the Player Experience. We present our proposed means of defining
Playability, its attributes and properties and how associate them
with the different elements of a video game.",Playability: How to Identify the Player Experience in a Video Game,0
215,"From Usability to Playability: Introduction to Player-Centred Video
Game Development Process
While video games have traditionally been considered simple entertainment
devices, nowadays they occupy a privileged position in the leisure
and entertainment market, representing the fastest-growing industry
globally. We regard the video game as a special type of interactive
system whose principal aim is to provide the player with fun and
entertainment. In this paper we will analyse how, in Video Games
context, Usability alone is not sufficient to achieve the optimum
Player Experience. It needs broadening and deepening, to embrace
further attributes and properties that identify and describe the
Player Experience. We present our proposed means of defining Playability.
We also introduce the notion of Facets of Playability. Each facet
will allow us to characterize the Playability easily, and associate
them with the different elements of a video game. To guarantee the
optimal Player Experience, Playability needs to be assessed throughout
the entire video game development process, taking a Player-Centred
Video Game Design approach.","From Usability to Playability: Introduction to Player-Centred Video
Game Development Process",1
216,"A game-building environment for research in collaborative design
Collaborative design practices are evolving rapidly today as a result
of improvements in telecommunications and human-computer interfaces.
We present a suite of research tools that we have built in order
to evaluate a particular methodology for design based on a theory
of problem solving from the field of artificial intelligence. These
tools are (a) a formal specification for a class of multimedia games,
(b) a game-building tool called PRIME Designer, and (c) a game engine
that brings games to life. The design of these tools addresses several
issues: (1) support for a common language for the design process,
deriving from state-space search, (2) visual interfaces for collaboration,
(3) specifications for a class of games (called PRIME games) whose
affordances represent a balance between simplicity and richness,
(4) educating students to work in design teams that use advanced
computational services, and (5) assessing the learning and contributions
of each team member. We also report on a focus group study in which
four undergraduate students used the tools. Our experience suggests
that users without a computing background can learn how to employ
state-space trees to organize the design process, and thereby gain
facilities to coordinate their individual contributions to the design
of a game.",A game-building environment for research in collaborative design,0
217,"Creating an Emotionally Adaptive Game
To optimize a players experience, an emotionally adaptive game continuously
adapts its mechanics to the players emotional state, measured in
terms of emotion-data. This paper presents the first of two studies
that aim to realize an emotionally adaptive game. It investigates
the relations between game mechanics, a players emotional state
and his/her emotion-data. In an experiment, one game mechanic (speed)
was manipulated. Emotional state was self-reported in terms of valence,
arousal and boredom-frustration-enjoyment. In addition, a number
of (mainly physiology-based) emotion-data features were measured.
Correlations were found between the valence/arousal reports and the
emotion-data features. In addition, seven emotion-data features were
found to distinguish between a boring, frustrating and enjoying game
mode. Taken together, these features convey sufficient data to create
a first version of an emotionally adaptive game.",Creating an Emotionally Adaptive Game,1
218,"Better scripts, better games Included
Smarter, more powerful scripting languages will improve game performance
while making gameplay development more efficient. The video game
industry earned $8.85 billion in revenue in 2007, almost as much
as movies made at the box office. Much of this revenue was generated
by blockbuster titles created by large groups of people. Though large
development teams are not unheard of in the software industry, game
studios tend to have unique collections of developers. Software engineers
make up a relatively small portion of the game development team,
while the majority of the team consists of content creators such
as artists, musicians, and designers.","Better scripts, better games Included",1
219,"Commercial Strategies for SME Developers of Mobile Phone Serious
Games in UK Market
This paper is to analyze the detail mobile phone serious game market
information, in order to identify the business opportunities for
SME game developers in China and figure out the main barriers to
entry to the Chinese marketplace. Surely, at the end of this section,
some possible commercial strategies for SME developers in China will
be offered and recommended.","Commercial Strategies for SME Developers of Mobile Phone Serious
Games in UK Market",0
220,"Cross-Platform Mobile Phone Game Development Environment
This paper discusses the mobile phone game development tools, which
can achieve cross-platform development. Furthermore, this paper would
provide suggestions on: how to choose and what the reasons of choices
are.",Cross-Platform Mobile Phone Game Development Environment,0
221,"Visual Effects in Computer Games
Computer game players have already set the agenda for future visual
effects and techniques: One group seeks to enjoy movie-quality photorealistic
games, while another seeks maximum freedom of interaction in an open,
self-evolving, persistent virtual world.",Visual Effects in Computer Games,0
222,"Decomposition of Multi-player Games
Research in General Game Playing aims at building systems that learn
to play unknown games without human intervention. We contribute to
this endeavour by generalising the established technique of decomposition
from AI Planning to multi-player games. To this end, we present a
method for the automatic decomposition of previously unknown games
into independent subgames, and we show how a general game player
can exploit a successful decomposition for game tree search.",Decomposition of Multi-player Games,0
